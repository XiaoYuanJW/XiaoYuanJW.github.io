<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-13T06:05:22.070Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>YuanJW</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Cloud Alibaba（一） Nacos</title>
    <link href="http://example.com/2022/06/10/Spring%20Cloud%20Alibaba%EF%BC%88%E4%B8%80%EF%BC%89Nacos/"/>
    <id>http://example.com/2022/06/10/Spring%20Cloud%20Alibaba%EF%BC%88%E4%B8%80%EF%BC%89Nacos/</id>
    <published>2022-06-10T00:31:22.000Z</published>
    <updated>2022-06-13T06:05:22.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Cloud-Alibaba"><a href="#Spring-Cloud-Alibaba" class="headerlink" title="Spring Cloud Alibaba"></a>Spring Cloud Alibaba</h1><h2 id="Spring-Cloud-Alibaba简介"><a href="#Spring-Cloud-Alibaba简介" class="headerlink" title="Spring Cloud Alibaba简介"></a>Spring Cloud Alibaba简介</h2><p>Spring Cloud Alibaba的官网：<a href="https://spring-cloud-alibaba-group.github.io/github-pages/2021/zh-cn/">https://spring-cloud-alibaba-group.github.io/github-pages/2021/zh-cn/</a></p><p>Spring Cloud Alibaba致力于提供为微服务开发的一站式解决方案。Spring Cloud Alibaba包含开发分布式应用服务的必需组件，方便开发者通过Spring Cloud编程模型轻松使用这些组件来开发分布式应用服务。</p><p>基于Spring Cloud Alibaba，我们只需要添加一些注解和少量配置，就可以将Spring Cloud应用接入阿里分布式应用解决方案，通过阿里中间件来迅速搭建分布式应用系统。</p><h2 id="Spring-Cloud-Alibaba功能"><a href="#Spring-Cloud-Alibaba功能" class="headerlink" title="Spring Cloud Alibaba功能"></a>Spring Cloud Alibaba功能</h2><ul><li><strong>服务限流降级</strong>：支持 WebServlet、WebFlux、OpenFeign、RestTemplate、Dubbo 限流降级功能的接入，可以在运行时通过控制台实时修改限流降级规则，还支持查看限流降级 Metrics 监控。</li><li><strong>服务注册与发现</strong>：适配 Spring Cloud 服务注册与发现标准，默认集成了 Ribbon 的支持。</li><li><strong>分布式配置管理</strong>：支持分布式系统中的外部化配置，配置更改时自动刷新。</li><li><strong>Rpc服务</strong>：扩展 Spring Cloud 客户端 RestTemplate 和 OpenFeign，支持调用 Dubbo RPC 服务</li><li><strong>消息驱动能力</strong>：基于 Spring Cloud Stream 为微服务应用构建消息驱动能力。</li><li><strong>分布式事务</strong>：使用 @GlobalTransactional 注解， 高效并且对业务零侵入地解决分布式事务问题。</li><li><strong>阿里云对象存储</strong>：阿里云提供的海量、安全、低成本、高可靠的云存储服务。支持在任何应用、任何时间、任何地点存储和访问任意类型的数据。</li><li><strong>分布式任务调度</strong>：提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。同时提供分布式的任务执行模型，如网格任务。网格任务支持海量子任务均匀分配到所有 Worker（schedulerx-client）上执行。</li><li><strong>阿里云短信服务</strong>：覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</li></ul><h1 id="Spring-Cloud-Alibaba-Nacos"><a href="#Spring-Cloud-Alibaba-Nacos" class="headerlink" title="Spring Cloud Alibaba Nacos"></a>Spring Cloud Alibaba Nacos</h1><h2 id="Nacos简介"><a href="#Nacos简介" class="headerlink" title="Nacos简介"></a>Nacos简介</h2><p>Nacos（Naming Configuration Service）是一款阿里巴巴开源的核心组件之一，可以作为注册中心和配置中心使用，是一个易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</p><h2 id="Spring-Cloud-Alibaba-Nacos-Discovery"><a href="#Spring-Cloud-Alibaba-Nacos-Discovery" class="headerlink" title="Spring Cloud Alibaba Nacos Discovery"></a>Spring Cloud Alibaba Nacos Discovery</h2><blockquote><p>使用 Spring Cloud Alibaba Nacos Discovery，可基于 Spring Cloud 的编程模型快速接入 Nacos 服务注册功能。</p></blockquote><p>本章即之后的章节项目将从微服务实战项目开始实现</p><h3 id="服务注册-发现：Nacos-Discovery"><a href="#服务注册-发现：Nacos-Discovery" class="headerlink" title="服务注册/发现：Nacos Discovery"></a>服务注册/发现：Nacos Discovery</h3><blockquote><p>传统手动的法师来给每一个客户端来配置所有服务提者的服务列表是一件非常困难的事，而且不利于服务的动态扩缩容。</p><p>Nacos Discovery帮助您将服务自动注册到Nacos服务端并且能够动态感知和刷新某个服务实例的服务列表。除此之外，Nacos Discovery 也将服务实例自身的一些元数据信息-例如 host，port, 健康检查URL，主页等内容注册到 Nacos</p></blockquote><h4 id="安装并运行Nacos"><a href="#安装并运行Nacos" class="headerlink" title="安装并运行Nacos"></a>安装并运行Nacos</h4><h5 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h5><p>下载地址：<a href="https://github.com/alibaba/nacos/releases">https://github.com/alibaba/nacos/releases</a></p><p>这里演示的是Release 1.4.3: <a href="https://github.com/alibaba/nacos/releases/tag/1.4.3">https://github.com/alibaba/nacos/releases/tag/1.4.3</a></p><p><img src="https://s2.loli.net/2022/06/08/8tACZwskQL5Heub.png" alt="image-20220608151022859"></p><h5 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h5><p><img src="https://s2.loli.net/2022/06/08/frndp5TaeJ7SOZD.png" alt="image-20220608151336675"></p><h5 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h5><h6 id="方法一：直接运行bin目录下的startup-cmd"><a href="#方法一：直接运行bin目录下的startup-cmd" class="headerlink" title="方法一：直接运行bin目录下的startup.cmd"></a>方法一：直接运行<code>bin</code>目录下的<code>startup.cmd</code></h6><p><img src="https://s2.loli.net/2022/06/08/uWno7NgHjlAv1YQ.png" alt="image-20220608151621137"></p><h6 id="方法二：命令行方式启动"><a href="#方法二：命令行方式启动" class="headerlink" title="方法二：命令行方式启动"></a>方法二：命令行方式启动</h6><p><img src="https://s2.loli.net/2022/06/08/5DIOhpWov4kPBNL.png" alt="image-20220608152119250"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startup.cmd -m standalone</span><br></pre></td></tr></table></figure><h5 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h5><p>账号：nacos 密码：nacos</p><p><img src="https://s2.loli.net/2022/06/08/dl1P39XjEkAm5Ng.png" alt="image-20220608225920696"></p><p><img src="https://s2.loli.net/2022/06/08/OKRqkeBDhpwPNfL.png" alt="image-20220608225804004"></p><h5 id="IDEA运行Nacos"><a href="#IDEA运行Nacos" class="headerlink" title="IDEA运行Nacos"></a>IDEA运行Nacos</h5><h6 id="导入nacos文件夹"><a href="#导入nacos文件夹" class="headerlink" title="导入nacos文件夹"></a>导入nacos文件夹</h6><p><img src="https://s2.loli.net/2022/06/08/dDZYqMEV9tNWcmr.png" alt="image-20220608231129349"></p><h6 id="终端方式启动"><a href="#终端方式启动" class="headerlink" title="终端方式启动"></a>终端方式启动</h6><p><img src="https://s2.loli.net/2022/06/08/wzX2b8VWQRykMfq.png" alt="image-20220608231419442"></p><h6 id="编辑配置"><a href="#编辑配置" class="headerlink" title="编辑配置"></a>编辑配置</h6><p><img src="https://s2.loli.net/2022/06/08/fAzdYW28sNLPMpe.png" alt="image-20220608232132712"></p><p><img src="https://s2.loli.net/2022/06/08/BVs8lSHF1ZD2dXL.png" alt="image-20220608233248311"></p><h6 id="通过配置启动"><a href="#通过配置启动" class="headerlink" title="通过配置启动"></a>通过配置启动</h6><p><img src="https://s2.loli.net/2022/06/08/yRVKWxcu7sZU2kz.png" alt="image-20220608232058033"></p><p><img src="https://s2.loli.net/2022/06/08/r6iHNjoceKGankV.png" alt="image-20220608233607707"></p><h4 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h4><h5 id="父项目添加配置"><a href="#父项目添加配置" class="headerlink" title="父项目添加配置"></a>父项目添加配置</h5><p><img src="https://s2.loli.net/2022/06/11/LIl8gtkdGxURpBi.png" alt="image-20220611020306806"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2021.0.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="子项目添加配置"><a href="#子项目添加配置" class="headerlink" title="子项目添加配置"></a>子项目添加配置</h5><p><img src="https://s2.loli.net/2022/06/11/lRvphiuBSd7wfaY.png" alt="image-20220611020723174"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h5><p><img src="https://s2.loli.net/2022/06/11/ALlvrDuC5mVQgMW.png" alt="image-20220611021231105"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span> <span class="comment"># 配置Nacos地址</span></span><br></pre></td></tr></table></figure><p>其他微服务同样配置</p><h5 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h5><p><img src="https://s2.loli.net/2022/06/11/lnIpxQ9JEayjDvq.png" alt="image-20220611021949207"></p><p><img src="https://s2.loli.net/2022/06/11/NnVkXPtflOQUWYd.png" alt="image-20220611021927620"></p><h4 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h4><p>基于OpenFeign实现服务发现调用以及负载均衡</p><h5 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h5><p><img src="https://s2.loli.net/2022/06/11/yNjLUf183Eucp6n.png" alt="image-20220611022550859"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="添加服务绑定接口和服务降级实现类"><a href="#添加服务绑定接口和服务降级实现类" class="headerlink" title="添加服务绑定接口和服务降级实现类"></a>添加服务绑定接口和服务降级实现类</h5><p><img src="https://s2.loli.net/2022/06/11/OEimnYqFLwelMZ7.png" alt="image-20220611024104034"></p><h5 id="启动服务测试"><a href="#启动服务测试" class="headerlink" title="启动服务测试"></a>启动服务测试</h5><p><img src="https://s2.loli.net/2022/06/11/Mxo1qrJZSNjtK4V.png" alt="image-20220611130833755"></p><p>​                       <img src="https://s2.loli.net/2022/06/12/wj6JG7fOsYSLIXU.png" alt="imagep><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><h5 id="编辑配置-1"><a href="#编辑配置-1" class="headerlink" title="编辑配置"></a>编辑配置</h5><p><img src="https://s2.loli.net/2022/06/12/EvKuoxNLlVwqRiy.png"></p><h5 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h5><p><img src="https://s2.loli.net/2022/06/12/lTUnKwx1SduasmJ.png" alt="image-20220612003248596"></p><h4 id="集群分区"><a href="#集群分区" class="headerlink" title="集群分区"></a>集群分区</h4><h5 id="拷贝配置文件"><a href="#拷贝配置文件" class="headerlink" title="拷贝配置文件"></a>拷贝配置文件</h5><p><img src="https://s2.loli.net/2022/06/12/EhunzVocyP6M1CS.png" alt="image-20220612124042870"></p><h5 id="编辑配置-2"><a href="#编辑配置-2" class="headerlink" title="编辑配置"></a>编辑配置</h5><p><img src="https://s2.loli.net/2022/06/12/YxV1I2DsBoEF4hl.png" alt="image-20220612124226242"></p><h5 id="运行服务"><a href="#运行服务" class="headerlink" title="运行服务"></a>运行服务</h5><p><img src="https://s2.loli.net/2022/06/12/ns4bIiGj3W5ydVu.png" alt="image-20220612124304898"></p><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p><img src="C:\Users\YuanJW\AppData\Roaming\Typora\typora-user-images\image-20220612124621418.png" alt="image-20220612124621418"></p><p><img src="https://s2.loli.net/2022/06/12/UGdaPulTBXkr3Jt.png" alt="image-20220612124751157"></p><p>可以看到远程调用会优先调用同区域的服务</p><h4 id="配置中心"><a href="#配置中心" class="headerlink" title="配置中心"></a>配置中心</h4><h5 id="新建配置"><a href="#新建配置" class="headerlink" title="新建配置"></a>新建配置</h5><p><img src="https://s2.loli.net/2022/06/12/Ry2bVgdP1IoFZar.png" alt="image-20220612130208791"></p><p><img src="https://s2.loli.net/2022/06/12/wpOtfNlVsoGCrRd.png" alt="image-20220612130406018"></p><h5 id="模块导入依赖"><a href="#模块导入依赖" class="headerlink" title="模块导入依赖"></a>模块导入依赖</h5><p><img src="https://s2.loli.net/2022/06/12/JVXhSTP1DFaOd7G.png" alt="image-20220612130732290"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="添加bootstrap-yml文件"><a href="#添加bootstrap-yml文件" class="headerlink" title="添加bootstrap.yml文件"></a>添加bootstrap.yml文件</h5><p><img src="https://s2.loli.net/2022/06/12/2ZYdKlxQmgjJtE4.png"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">user-service</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span> <span class="comment">#环境</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span> <span class="comment"># 配置文件后缀名</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span> <span class="comment"># 配置中心服务器地址</span></span><br></pre></td></tr></table></figure><h5 id="动态配置刷新"><a href="#动态配置刷新" class="headerlink" title="动态配置刷新"></a>动态配置刷新</h5><p><img src="https://s2.loli.net/2022/06/12/OqbusFDZzSiaved.png" alt="image-20220612131405795"></p><h6 id="添加测试接口"><a href="#添加测试接口" class="headerlink" title="添加测试接口"></a>添加测试接口</h6><blockquote><p>@RefreshScope开启配置热更新</p></blockquote><p><img src="https://s2.loli.net/2022/06/12/csGIkjSia1y6dxQ.png" alt="image-20220612131815556"></p><h6 id="接口测试"><a href="#接口测试" class="headerlink" title="接口测试"></a>接口测试</h6><p><img src="https://s2.loli.net/2022/06/12/Fob8w4xCkHZfrYR.png" alt="image-20220612132921114"></p><h4 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h4><h5 id="创建命名空间"><a href="#创建命名空间" class="headerlink" title="创建命名空间"></a>创建命名空间</h5><p><img src="https://s2.loli.net/2022/06/12/NbDjJcxY6zTvPRA.png" alt="image-20220612160137591"></p><p><img src="https://s2.loli.net/2022/06/12/SinjsVObu3Y4wBN.png" alt="image-20220612160204606"></p><p><img src="https://s2.loli.net/2022/06/12/fl7od9eZ2JvtEB8.png" alt="image-20220612160223591"></p><h5 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h5><p><img src="https://s2.loli.net/2022/06/12/8zqR4YNVnatEwhL.png" alt="image-20220612160411772"></p><p><img src="https://s2.loli.net/2022/06/12/7SYlMxaL4zGXkWZ.png" alt="image-20220612160925156"></p><h4 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h4><h5 id="集群部署架构图"><a href="#集群部署架构图" class="headerlink" title="集群部署架构图"></a>集群部署架构图</h5><p><img src="https://nacos.io/img/deployDnsVipMode.jpg" alt="deployDnsVipMode.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring-Cloud-Alibaba&quot;&gt;&lt;a href=&quot;#Spring-Cloud-Alibaba&quot; class=&quot;headerlink&quot; title=&quot;Spring Cloud Alibaba&quot;&gt;&lt;/a&gt;Spring Cloud Alibaba&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
    <category term="Spring Cloud Alibaba" scheme="http://example.com/tags/Spring-Cloud-Alibaba/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud（七） Gateway</title>
    <link href="http://example.com/2022/06/05/07.Spring%20Cloud%EF%BC%88%E4%B8%83%EF%BC%89Gateway/"/>
    <id>http://example.com/2022/06/05/07.Spring%20Cloud%EF%BC%88%E4%B8%83%EF%BC%89Gateway/</id>
    <published>2022-06-05T12:32:54.000Z</published>
    <updated>2022-06-06T02:05:01.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Cloud-Gateway"><a href="#Spring-Cloud-Gateway" class="headerlink" title="Spring Cloud Gateway"></a>Spring Cloud Gateway</h1><h2 id="Gateway简介"><a href="#Gateway简介" class="headerlink" title="Gateway简介"></a>Gateway简介</h2><p>Gateway为SpringBoot应用提供了API网关支持，具有强大的智能路由与过滤器功能，是Spring Cloud的第二代网关组件。</p><blockquote><p>Gateway是在Spring生态系统之上构建的API网关服务，基于Spring 5.0、Spring Boot 2和Project Reactor等技术。</p><p>Gateway旨在提供一种简单有效的方式来对API进行路由以及提供一些强大的过滤器功能，例如：熔断、限流、重试等。</p><p>Gateway基于Spring 5.0的新特性WebFlux进行开发，底层网络通信框架使用的是Netty，所以其吞吐量高、性能强劲。</p></blockquote><h3 id="Gateway特性"><a href="#Gateway特性" class="headerlink" title="Gateway特性"></a>Gateway特性</h3><p>Spring Cloud Gateway具有如下特性：</p><ul><li>基于基于Spring 5、Spring Boot 2和Project Reactor进行构建；</li><li>动态路由：能够匹配任何请求属性；</li><li>集成Spring Cloud服务发现组件自动转发请求，默认集成Ribbon做负载均衡，默认集成Hystrix的断路器功能网关进行保护；</li><li>易于编写Predicate（断言）和Filter（过滤器）并对路由指定</li><li>请求限流，支持路径重写</li><li>性能强劲，功能强大，设计优雅，易于扩展。</li></ul><h3 id="Gateway核心概念"><a href="#Gateway核心概念" class="headerlink" title="Gateway核心概念"></a>Gateway核心概念</h3><h4 id="Route（路由）"><a href="#Route（路由）" class="headerlink" title="Route（路由）"></a>Route（路由）</h4><p>路由是构建网关的基本模块，它由ID、目标URL、一系列的断言和过滤器组成。如果断言为true，则匹配该路由。</p><h4 id="Predicate（断言）"><a href="#Predicate（断言）" class="headerlink" title="Predicate（断言）"></a>Predicate（断言）</h4><p>Java 8的Function Predicate。输入类型是Spring框架中ServerWebExchange。开发人员可以匹配HTTP请求中的所有内容，例如请求头或请求参数。如果请求与断言相匹配，则进行路由。</p><h4 id="Filter（过滤器）"><a href="#Filter（过滤器）" class="headerlink" title="Filter（过滤器）"></a>Filter（过滤器）</h4><p>指的是Spring框架中GatewayFilter的实例。使用过滤器，可以在请求被路由前后对请求以及响应数据进行修改，同时可以利用Filter实现授权、访问日志记录、接口耗时记录等功能。</p><h3 id="Spring-Cloud架构图"><a href="#Spring-Cloud架构图" class="headerlink" title="Spring Cloud架构图"></a>Spring Cloud架构图</h3><p><img src="https://s2.loli.net/2022/06/06/T2XrzdfAtqo9K7b.webp" alt="img"></p><p>Gateway  Client发送请求给Spring Cloud Gateway，Gateway Handler Mapping会判断请求路径是否匹配路由的配置，如果匹配则会进入Gateway Web Handler，Gateway Web Handler会读取路由上所有配置的过滤器，然后将该请求交给过滤器处理，最后转发到路由配置的微服务上。</p><h2 id="整合Gateway网关服务"><a href="#整合Gateway网关服务" class="headerlink" title="整合Gateway网关服务"></a>整合Gateway网关服务</h2><h3 id="创建api-gateway模块"><a href="#创建api-gateway模块" class="headerlink" title="创建api-gateway模块"></a>创建api-gateway模块</h3><p><img src="https://s2.loli.net/2022/06/05/qDz7pj6vEbOulfM.png" alt="image-20220605220825979"></p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><p><img src="https://s2.loli.net/2022/06/05/Yx1iOJq3PbXy4rm.png" alt="image-20220605220610948"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><h3 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: <span class="number">8501</span></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: api-gateway</span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    service-url:</span><br><span class="line">      defaultZone: http:<span class="comment">//root:123456@replica1:8005/eureka,</span></span><br><span class="line">                   http:<span class="comment">//root:123456@replica2:8006/eureka</span></span><br></pre></td></tr></table></figure><h3 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GatewayApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(GatewayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置路由-两种不同的方式"><a href="#配置路由-两种不同的方式" class="headerlink" title="配置路由(两种不同的方式)"></a>配置路由(两种不同的方式)</h3><p>Gateway提供了两种不同方式用于路由的配置，一种是通过yml文件来配置，另一种是通过Java Bean来配置。</p><h4 id="使用yml文件配置"><a href="#使用yml文件配置" class="headerlink" title="使用yml文件配置"></a>使用yml文件配置</h4><h5 id="修改配置文件："><a href="#修改配置文件：" class="headerlink" title="修改配置文件："></a>修改配置文件：</h5><p><img src="https://s2.loli.net/2022/06/05/r4kbVZfiJ5tU3QH.png" alt="image-20220605224452034"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8501</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">api-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span> <span class="comment"># 配置路由</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">borrow-service</span> <span class="comment"># 路由ID</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://borrow-service</span> <span class="comment"># 匹配后路由地址 lb表示负载均衡</span></span><br><span class="line">          <span class="attr">predicates:</span> <span class="comment"># 断言，路径相匹配进行路由</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/borrow/**</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@replica1:8005/eureka,</span></span><br><span class="line">                   <span class="string">http://root:123456@replica2:8006/eureka</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/06/05/Og8xt27sBWCD9Sq.png" alt="image-20220605232411324"></p><h4 id="使用Java-Bean配置"><a href="#使用Java-Bean配置" class="headerlink" title="使用Java Bean配置"></a>使用Java Bean配置</h4><p><img src="https://s2.loli.net/2022/06/05/ioLBp79xsMtrvnE.png" alt="image-20220605232458457"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GatewayConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RouteLocator <span class="title function_">customRouteLocator</span><span class="params">(RouteLocatorBuilder builder)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> builder.routes()</span><br><span class="line">                .route(r -&gt; r.path(<span class="string">&quot;/user/**&quot;</span>)</span><br><span class="line">                        .uri(<span class="string">&quot;http://localhost:8101/user/**&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/06/05/t2CS3Wq19cXrMOA.png" alt="image-20220605232523491"></p><h3 id="路由过滤器"><a href="#路由过滤器" class="headerlink" title="路由过滤器"></a>路由过滤器</h3><h4 id="给请求添加请求头的过滤器"><a href="#给请求添加请求头的过滤器" class="headerlink" title="给请求添加请求头的过滤器"></a>给请求添加请求头的过滤器</h4><p><img src="https://s2.loli.net/2022/06/06/NzZf2bdg94rekMy.png" alt="image-20220606094937543"></p><h4 id="在BookController获取请求头并输出"><a href="#在BookController获取请求头并输出" class="headerlink" title="在BookController获取请求头并输出"></a>在BookController获取请求头并输出</h4><p><img src="https://s2.loli.net/2022/06/06/gmV7Ys18ARCIEiX.png" alt="image-20220606095201696"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="https://s2.loli.net/2022/06/06/YoedDxJR1I9Av3M.png" alt="image-20220606095224169"></p><p>控制打印</p><p><img src="https://s2.loli.net/2022/06/06/2I1H3YFoqgMpfQO.png" alt="image-20220606095302361"></p><h3 id="全局路由配置器"><a href="#全局路由配置器" class="headerlink" title="全局路由配置器"></a>全局路由配置器</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring-Cloud-Gateway&quot;&gt;&lt;a href=&quot;#Spring-Cloud-Gateway&quot; class=&quot;headerlink&quot; title=&quot;Spring Cloud Gateway&quot;&gt;&lt;/a&gt;Spring Cloud Gateway&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
    <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud（八） Config</title>
    <link href="http://example.com/2022/06/05/08.Spring%20Cloud%EF%BC%88%E5%85%AB%EF%BC%89Config/"/>
    <id>http://example.com/2022/06/05/08.Spring%20Cloud%EF%BC%88%E5%85%AB%EF%BC%89Config/</id>
    <published>2022-06-05T12:32:54.000Z</published>
    <updated>2022-06-06T16:40:02.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Cloud-Config"><a href="#Spring-Cloud-Config" class="headerlink" title="Spring Cloud Config"></a>Spring Cloud Config</h1><p>对于传统的单体应用，使用配置文件管理所有配置。而在微服务架构中，微服务的配置管理一般有以下需求：</p><ul><li>集中管理配置</li><li>环境不同，配置不同</li><li>运行时可动态调整</li><li>配置修改后自动更新</li></ul><p>因此对于微服务架构而言，一个通用的配置管理机制必不可少，常见的做法时使用配置服务器管理配置。</p><h2 id="Spring-Cloud-Config简介"><a href="#Spring-Cloud-Config简介" class="headerlink" title="Spring Cloud Config简介"></a>Spring Cloud Config简介</h2><p>Spring Cloud Config为分布式系统提供了集中化的外部配置支持，它分为服务端和客户端两个部分即Config Server和Config Client两部分。由于Config Server和Config Client实现了对Spring Environment和PropertySource抽象的映射， 因此，Spring Cloud Config适合Spring应用程序。</p><p>Config Server是一个可横向扩展、集中式的配置服务器即分布式配置中心，它作为一个独立应用，用于集中管理应用程序各个环境下的配置，它可以从配置仓库获取配置信息并提供给客户端使用。</p><p>Config Client是Config Server的客户端，通过请求配置中心来获取配置信息，在启动时加载配置并缓存以提高性能。</p><p>Spring Cloud Config的配置中心默认采用Git来存储配置信息，因此可以方便地实现对配置的版本控制与内容审计。</p><p><img src="https://s2.loli.net/2022/06/06/hz19xyFDBeJOVRL.png" alt="image-20220606232213855"></p><h2 id="Git仓库准备配置信息"><a href="#Git仓库准备配置信息" class="headerlink" title="Git仓库准备配置信息"></a>Git仓库准备配置信息</h2><h3 id="新建repo"><a href="#新建repo" class="headerlink" title="新建repo"></a>新建repo</h3><p><img src="https://s2.loli.net/2022/06/07/oEt9WpbLNP2QmXc.png" alt="image-20220607001325420"></p><h3 id="导入本地"><a href="#导入本地" class="headerlink" title="导入本地"></a>导入本地</h3><p><img src="https://s2.loli.net/2022/06/06/3xurKjNWiDcIAE6.png" alt="image-20220606235624177"></p><p><img src="https://s2.loli.net/2022/06/07/dfiIQVpuzoYmlPe.png" alt="image-20220607001406544"></p><h3 id="创建borrowservice-dev-yml文件"><a href="#创建borrowservice-dev-yml文件" class="headerlink" title="创建borrowservice-dev.yml文件"></a>创建borrowservice-dev.yml文件</h3><p><img src="https://s2.loli.net/2022/06/06/4tPNfGJ7LTDAxz3.png" alt="image-20220606235609117"></p><h3 id="上传Gitee"><a href="#上传Gitee" class="headerlink" title="上传Gitee"></a>上传Gitee</h3><p><img src="https://s2.loli.net/2022/06/06/HsFrAyLu23Tf7Zh.png" alt="image-20220606235723615"></p><h2 id="创建Config服务端"><a href="#创建Config服务端" class="headerlink" title="创建Config服务端"></a>创建Config服务端</h2><h3 id="创建config-server模块"><a href="#创建config-server模块" class="headerlink" title="创建config-server模块"></a>创建config-server模块</h3><p><img src="https://s2.loli.net/2022/06/06/qb2T7JnK8Pi4EzB.png" alt="image-20220606233511777"></p><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8601</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">config-server</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span> <span class="comment">#配置存储配置信息的Git仓库</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://gitee.com/YuanJianWei/springcloud-config.git</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">YuanJianWei</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">13851176590</span><span class="string">++</span></span><br><span class="line">          <span class="attr">default-label:</span> <span class="string">master</span></span><br><span class="line">          <span class="attr">clone-on-start:</span> <span class="literal">true</span> <span class="comment">#开启启动时直接从git获取配置</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@replica1:8005/eureka,</span></span><br><span class="line">                   <span class="string">http://root:123456@replica2:8006/eureka</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span><span class="comment">/*启用配置中心功能*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigServerApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ConfigServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取配置信息"><a href="#获取配置信息" class="headerlink" title="获取配置信息"></a>获取配置信息</h3><h4 id="获取配置文件信息的访问格式"><a href="#获取配置文件信息的访问格式" class="headerlink" title="获取配置文件信息的访问格式"></a>获取配置文件信息的访问格式</h4><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取配置信息</span></span><br><span class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;</span><br><span class="line"><span class="comment"># 获取配置文件信息</span></span><br><span class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.yml</span><br></pre></td></tr></table></figure></blockquote><p>访问<a href="http://localhost:8601/master/borrowservice-dev.yml">http://localhost:8601/master/borrowservice-dev.yml</a></p><p><img src="https://s2.loli.net/2022/06/07/xXTRL7leICF1zah.png" alt="image-20220607001222532"></p><h2 id="创建Config客户端"><a href="#创建Config客户端" class="headerlink" title="创建Config客户端"></a>创建Config客户端</h2><p><img src="https://s2.loli.net/2022/06/07/rzEuANgdV6KZf7b.png" alt="image-20220607002521755"></p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加配置文件bootstrap-yml"><a href="#添加配置文件bootstrap-yml" class="headerlink" title="添加配置文件bootstrap.yml"></a>添加配置文件bootstrap.yml</h3><p><img src="https://s2.loli.net/2022/06/07/9ZMSb4OG5nk8FH2.png" alt="image-20220607002856093"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">borrowservice</span> <span class="comment">#配置文件名称</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://localhost:8601</span> <span class="comment">#配置服务器地址</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">prod</span> <span class="comment">#环境</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span> <span class="comment">#分支</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/06/07/FnTrGmKMAlUNBsO.png" alt="image-20220607003453586"></p><h2 id="配置中心添加安全认证"><a href="#配置中心添加安全认证" class="headerlink" title="配置中心添加安全认证"></a>配置中心添加安全认证</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring-Cloud-Config&quot;&gt;&lt;a href=&quot;#Spring-Cloud-Config&quot; class=&quot;headerlink&quot; title=&quot;Spring Cloud Config&quot;&gt;&lt;/a&gt;Spring Cloud Config&lt;/h1&gt;&lt;p&gt;对于</summary>
      
    
    
    
    
    <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud（六） OpenFegin</title>
    <link href="http://example.com/2022/06/05/06.Spring%20Cloud%EF%BC%88%E5%85%AD%EF%BC%89OpenFegin/"/>
    <id>http://example.com/2022/06/05/06.Spring%20Cloud%EF%BC%88%E5%85%AD%EF%BC%89OpenFegin/</id>
    <published>2022-06-04T17:55:21.000Z</published>
    <updated>2022-06-07T14:09:12.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Cloud-OpenFegin"><a href="#Spring-Cloud-OpenFegin" class="headerlink" title="Spring Cloud OpenFegin"></a>Spring Cloud OpenFegin</h1><p>RestTemplate可以实现REST API的远程调用，它的请求URL使用字符串拼接的方式，在应对URL中存在多个参数的情况时，这种方式会变得非常低效并且难以维护。</p><h2 id="Spring-Cloud-OpenFegin简介"><a href="#Spring-Cloud-OpenFegin简介" class="headerlink" title="Spring Cloud OpenFegin简介"></a>Spring Cloud OpenFegin简介</h2><p> Spring Cloud OpenFegin是声明式的服务调用工具，它整合了Ribbon和Hystrix，拥有负载均衡和服务容错功能。</p><blockquote><p>Fegin是声明式的服务调用工具，我们只需要创建一个接口并用注解的方式来配置它，就可以实现对某个服务接口的调用，简化了直接使用RestTemplate来调用服务接口的开发量。Fegin具备可插拔的注解支持，同时支持Fegin注解、JAX-RS注解及SpringMVC注解。</p></blockquote><h3 id="Fegin和OpenFegin的区别"><a href="#Fegin和OpenFegin的区别" class="headerlink" title="Fegin和OpenFegin的区别"></a>Fegin和OpenFegin的区别</h3><h4 id="Fegin"><a href="#Fegin" class="headerlink" title="Fegin"></a>Fegin</h4><p>Fegin是Spring Cloud组件中的一个轻量级RESTful的HTTP服务客户端，Fegin内置Ribbon用来做客户端负载均衡，去调用服务注册中心的服务。</p><p>Fegin的使用方式：使用Fegin的注解定义接口，调用这个接口就可以调用服务注册中心的服务。</p><p>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="OpenFegin"><a href="#OpenFegin" class="headerlink" title="OpenFegin"></a>OpenFegin</h4><p>OpenFegin是Spring Cloud在Fegin的基础上支持了SpringMVC的注解，如@RequestMapping等。OpenFegin的@FeginClient可以解析SpringMVC的@RequestMapping注解下的接口，并通过动态代理的方式产生实现类。实现类中做负载均衡并调用其他服务。</p><p>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="整合OpenFeign实现负载均衡"><a href="#整合OpenFeign实现负载均衡" class="headerlink" title="整合OpenFeign实现负载均衡"></a>整合OpenFeign实现负载均衡</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="启动类添加-EnableFeignClients注解"><a href="#启动类添加-EnableFeignClients注解" class="headerlink" title="启动类添加@EnableFeignClients注解"></a>启动类添加@EnableFeignClients注解</h3><p><img src="https://s2.loli.net/2022/06/05/UDdStf3Qbz69eVZ.png" alt="image-20220605132039642"></p><h3 id="添加UserService接口完成对user-service服务的接口绑定"><a href="#添加UserService接口完成对user-service服务的接口绑定" class="headerlink" title="添加UserService接口完成对user-service服务的接口绑定"></a>添加UserService接口完成对user-service服务的接口绑定</h3><p><img src="https://s2.loli.net/2022/06/05/3dugCIv5k6wLcKN.png" alt="image-20220605132646831"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;user-service&quot;)</span><span class="comment">/*实现Feign客户端,value接口调用的服务名称*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line">    User <span class="title function_">getUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理，添加BookService接口完成对于book-service服务的接口绑定</p><p><img src="https://s2.loli.net/2022/06/05/14xQfTnyHFwRSvX.png" alt="image-20220605132956580"></p><h3 id="BorrowServiceImp调用UserService实现服务调用"><a href="#BorrowServiceImp调用UserService实现服务调用" class="headerlink" title="BorrowServiceImp调用UserService实现服务调用"></a>BorrowServiceImp调用UserService实现服务调用</h3><p><img src="https://s2.loli.net/2022/06/05/6whiYtgEzWMUjVy.png" alt="image-20220605132853381"></p><p><img src="https://s2.loli.net/2022/06/05/tMSd57zToAQI391.png" alt="image-20220605133038830"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> BorrowDetail <span class="title function_">getBorrow</span><span class="params">(Long uid, Long bid)</span> &#123;</span><br><span class="line">    List&lt;Borrow&gt; borrows = borrowMapper.getBorrow(uid, bid);</span><br><span class="line">    List&lt;User&gt; users =  borrows.stream().map(borrow -&gt; userService.getUserById(borrow.getUid())).collect(Collectors.toList());</span><br><span class="line">    List&lt;Book&gt; books =  borrows.stream().map(borrow -&gt; bookService.getBookById(borrow.getBid())).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BorrowDetail</span>(users, books);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在user-service中的UserController打印日志"><a href="#在user-service中的UserController打印日志" class="headerlink" title="在user-service中的UserController打印日志"></a>在user-service中的UserController打印日志</h3><p><img src="https://s2.loli.net/2022/06/05/IPkiFTsR1YGBAcN.png" alt="image-20220605133900846"></p><h3 id="验证负载均衡"><a href="#验证负载均衡" class="headerlink" title="验证负载均衡"></a>验证负载均衡</h3><p><img src="https://s2.loli.net/2022/06/05/GPbwXkYHrVo8afR.png" alt="image-20220605134255080"></p><p><img src="https://s2.loli.net/2022/06/05/aK4OpjqlvUDEI1c.png" alt="image-20220605134410516"></p><h2 id="整合OpenFeign实现服务降级"><a href="#整合OpenFeign实现服务降级" class="headerlink" title="整合OpenFeign实现服务降级"></a>整合OpenFeign实现服务降级</h2><blockquote><p>OpenFegin客户端定义的接口添加一个服务降级处理的实现类即可实现OpenFegin的服务降级</p></blockquote><h3 id="添加服务降级实现类UserFallBackService"><a href="#添加服务降级实现类UserFallBackService" class="headerlink" title="添加服务降级实现类UserFallBackService"></a>添加服务降级实现类UserFallBackService</h3><p><img src="https://s2.loli.net/2022/06/05/A7yQXgGbRl3mPBO.png" alt="image-20220605151559717"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookFallBackService</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">getBookById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Book</span>(-<span class="number">1L</span>, <span class="string">&quot;defaultTitle&quot;</span>, <span class="string">&quot;defaultDesc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置UserService接口服务降级处理类"><a href="#设置UserService接口服务降级处理类" class="headerlink" title="设置UserService接口服务降级处理类"></a>设置UserService接口服务降级处理类</h3><p><img src="https://s2.loli.net/2022/06/05/hgX3uTofsO7zU4Z.png" alt="image-20220605165649334"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;book-service&quot;, fallback = BookFallBackService.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/book/&#123;id&#125;&quot;)</span></span><br><span class="line">    Book <span class="title function_">getBookById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置文件开启Fegin的Hystrix功能"><a href="#配置文件开启Fegin的Hystrix功能" class="headerlink" title="配置文件开启Fegin的Hystrix功能"></a>配置文件开启Fegin的Hystrix功能</h3><p><img src="https://s2.loli.net/2022/06/05/wAng5WdMf29LQsP.png" alt="image-20220605165946830"></p><p><img src="https://s2.loli.net/2022/06/05/VqtCTQgKr6h1S3d.png" alt="image-20220605170248889"></p><h2 id="整合OpenFegin实现日志打印"><a href="#整合OpenFegin实现日志打印" class="headerlink" title="整合OpenFegin实现日志打印"></a>整合OpenFegin实现日志打印</h2><blockquote><p>Fegin提供了日志打印功能，通过配置来调整日志级别，从而理解Fegin中HTTP请求的细节</p></blockquote><h3 id="日志级别"><a href="#日志级别" class="headerlink" title="日志级别"></a>日志级别</h3><ul><li>NONE：默认的，不显示任何日志</li><li>BASIC：仅记录请求方法、URL、响应状态码及执行时间</li><li>HEADERS：除了BASIC中定义的信息之外，还有请求和响应的头信息</li><li>FULL：除了HEADERS中定义的信息之外，还有请求和响应的正文及元数据</li></ul><h3 id="通过配置类开启日志功能"><a href="#通过配置类开启日志功能" class="headerlink" title="通过配置类开启日志功能"></a>通过配置类开启日志功能</h3><p><img src="https://s2.loli.net/2022/06/05/CxnPemj5FwgDbLT.png" alt="image-20220605171557899"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FeginConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    Logger.Level <span class="title function_">feignLoggerLevel</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置文件开启日志的Fegin客户端"><a href="#配置文件开启日志的Fegin客户端" class="headerlink" title="配置文件开启日志的Fegin客户端"></a>配置文件开启日志的Fegin客户端</h3><p>设置UserService和BookService的日志级别为debug</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.test.service.UserService:</span> <span class="string">debug</span></span><br><span class="line">    <span class="attr">com.test.service.BookService:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p>调用<a href="http://localhost:8301/borrow?uid=1&amp;bid=1%E8%BF%9B%E8%A1%8C%E6%B5%8B%E8%AF%95%EF%BC%8C%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%97%A5%E5%BF%97%E5%A6%82%E4%B8%8B">http://localhost:8301/borrow?uid=1&amp;bid=1进行测试，控制台日志如下</a></p><p><img src="https://s2.loli.net/2022/06/05/kJbqoUnj5z2wExF.png" alt="image-20220605172131544"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring-Cloud-OpenFegin&quot;&gt;&lt;a href=&quot;#Spring-Cloud-OpenFegin&quot; class=&quot;headerlink&quot; title=&quot;Spring Cloud OpenFegin&quot;&gt;&lt;/a&gt;Spring Cloud OpenFeg</summary>
      
    
    
    
    
    <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud（五） Hystrix</title>
    <link href="http://example.com/2022/06/04/05.Spring%20Cloud%EF%BC%88%E4%BA%94%EF%BC%89Hystrix/"/>
    <id>http://example.com/2022/06/04/05.Spring%20Cloud%EF%BC%88%E4%BA%94%EF%BC%89Hystrix/</id>
    <published>2022-06-04T07:16:22.000Z</published>
    <updated>2022-06-05T12:30:13.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Cloud-Hystrix"><a href="#Spring-Cloud-Hystrix" class="headerlink" title="Spring Cloud Hystrix"></a>Spring Cloud Hystrix</h1><h2 id="Spring-Cloud-Hystrix简介"><a href="#Spring-Cloud-Hystrix简介" class="headerlink" title="Spring Cloud Hystrix简介"></a>Spring Cloud Hystrix简介</h2><p>Spring Cloud Hystrix是Spring Cloud Netflix子项目的核心组件之一，是一个用于处理分布式系统的延迟和容错的开源库，具有服务容错和线程隔离等一系列服务保护功能。</p><p>在微服务架构中，服务与服务之间通过远程调用的方式实现通信，一旦某个被调用的服务发生故障，其依赖服务也会发生故障，此时就会发生故障的蔓延，导致分布式的系统雪崩和瘫痪。</p><p><img src="https://s2.loli.net/2022/06/04/TanKqHZ7Ak9pi3U.jpg" alt="image-20220324141706946"></p><p>由于多种因素，例如网络响应、系统故障、硬件问题等，服务发生故障的情况是无法避免的。因此我们需要一个应对服务容错保护的解决方案。</p><p>Spring Cloud Hystrix实现了断路器模式，它相当于一种开关控制，通过断路器的故障监控即保险丝，当某个服务发生故障时，通过断路器监控，给服务的调用方返回一个服务于其的，可处理的备用响应响应（FallBack），而不是长时间的等待或者抛出异常，避免联级故障，这样就不会使得调用方由于长时间得不到响应而占用线程从而导致故障的蔓延，提高了分布式系统的弹性。</p><p><img src="https://s2.loli.net/2022/06/04/yOjCxY7dLbapvl3.webp" alt="img"></p><p>Hystrix具备服务降级、服务熔断、服务限流、线程隔离、请求缓存、请求合并及服务监控等强大的功能。</p><h2 id="服务降级"><a href="#服务降级" class="headerlink" title="服务降级"></a>服务降级</h2><h3 id="服务降级定义"><a href="#服务降级定义" class="headerlink" title="服务降级定义"></a>服务降级定义</h3><p>服务降级：当服务器压力剧增的情况下，根据实际业务情况及流量，对一些服务和页面有策略的不处理或作简单处理，从而释放服务器资源以保证核心业务正常运作或高效运作，即服务降级提供一个补救措施正常响应给请求者，保证服务可用的前提下，提高系统的可用性和安全性。如果在并发高峰期不做服务降级处理，不仅会影响整体服务的性能，甚至会导致宕机造成服务不可用。</p><h3 id="服务降级应用场景"><a href="#服务降级应用场景" class="headerlink" title="服务降级应用场景"></a>服务降级应用场景</h3><p>一般在高峰期，为了保证核心功能服务的可用性，要对某些服务降级处理。</p><blockquote><p>当整个微服务架构整体的负载超出了预设的上限阈值或即将到来的流量预计将会超过预设的阈值时，为了保证重要或基本的服务能正常运行，可以将一些不重要或不紧急的服务或任务进行服务 延迟使用或暂停使用。</p></blockquote><h3 id="服务降级实现"><a href="#服务降级实现" class="headerlink" title="服务降级实现"></a>服务降级实现</h3><h4 id="导入Hystrix依赖"><a href="#导入Hystrix依赖" class="headerlink" title="导入Hystrix依赖"></a>导入Hystrix依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="启动类添加注解-EnableHystrix"><a href="#启动类添加注解-EnableHystrix" class="headerlink" title="启动类添加注解@EnableHystrix"></a>启动类添加注解@EnableHystrix</h4><p><img src="https://s2.loli.net/2022/06/04/PdLg2ro1MDa9SJI.png" alt="image-20220604155829336"></p><h4 id="在服务实现层添加调用方法与服务降级方法并且添加-HystrixCommand注解"><a href="#在服务实现层添加调用方法与服务降级方法并且添加-HystrixCommand注解" class="headerlink" title="在服务实现层添加调用方法与服务降级方法并且添加@HystrixCommand注解"></a>在服务实现层添加调用方法与服务降级方法并且添加@HystrixCommand注解</h4><p><img src="https://s2.loli.net/2022/06/04/9hrHs1cifuelgbX.png" alt="image-20220604161405440"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorrowServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BorrowService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    BorrowMapper borrowMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;service-url.user-service&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String userServiceUrl;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;service-url.book-service&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bookServiceUrl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@HystrixCommand(fallbackMethod = &quot;getDefaultUserBorrowDetail&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> UserBorrowDetail <span class="title function_">getBorrowByUser</span><span class="params">(Long uid)</span> &#123;</span><br><span class="line">        List&lt;Borrow&gt; borrows = borrowMapper.getBorrow(uid,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> restTemplate.getForObject(userServiceUrl + <span class="string">&quot;/user/&quot;</span> + uid, User.class);</span><br><span class="line">        List&lt;Book&gt; books = borrows.stream().map(borrow -&gt; restTemplate.getForObject(bookServiceUrl + <span class="string">&quot;/book/&quot;</span> + borrow.getBid(), Book.class)).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserBorrowDetail</span>(user, books);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserBorrowDetail <span class="title function_">getDefaultUserBorrowDetail</span><span class="params">(<span class="meta">@PathVariable</span> Long uid)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserBorrowDetail</span>(<span class="literal">null</span>, Collections.emptyList());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h4><p><img src="https://s2.loli.net/2022/06/04/fFxadkwDN13iuEY.png" alt="image-20220604161028821"></p><p><img src="https://s2.loli.net/2022/06/04/bBlswq6HIe1oSMk.png" alt="image-20220604161441837"></p><h3 id="HystrixCommand常用参数"><a href="#HystrixCommand常用参数" class="headerlink" title="@HystrixCommand常用参数"></a>@HystrixCommand常用参数</h3><blockquote><ul><li>fallbackMethod：指定服务降级处理方法</li><li>ignoreExceptions：忽略某些处理，不发生服务降级</li><li>commandKey：命令名称，用于区分不同的命令</li><li>groupKey：分组名称，Hystrix会根据不同的分组来统计命令的告警及仪表盘信息</li><li>threadPoolKey：线程池，名称，用于划分线程池</li></ul></blockquote><h2 id="服务熔断"><a href="#服务熔断" class="headerlink" title="服务熔断"></a>服务熔断</h2><h3 id="服务熔断定义"><a href="#服务熔断定义" class="headerlink" title="服务熔断定义"></a>服务熔断定义</h3><p>熔断机制是应对雪崩效应的一种微服务链路保护机制。Hystrix会监控微服务调用的状况，默认当5秒内20次调用失败就会开启熔断机制，当检测出服务调用链路的某个微服务不可用或者响应时间太长时，会进行服务的降级，进而熔断该节点的微服务调用，快速返回”错误”的响应信息。此外，在熔断后，Hystrix会定期检测该节点的微服务是否恢复正常响应，当检测到该节点微服务响应正常后，恢复调用链路。</p><h2 id="Hystrix请求缓存"><a href="#Hystrix请求缓存" class="headerlink" title="Hystrix请求缓存"></a>Hystrix请求缓存</h2><blockquote><p>当系统并发量越来越大时，我们可以使用缓存来优化系统，达到减轻并发请求线程数，提供响应速度的效果。</p></blockquote><h2 id="Hystrix-Dashboard"><a href="#Hystrix-Dashboard" class="headerlink" title="Hystrix Dashboard"></a>Hystrix Dashboard</h2><p>Hystrix Dashboard是Spring Cloud中查看Hystrix实例执行情况的一种仪表组件，支持查看单个实例和查看集群实例。</p><blockquote><p> Hystrix提供了Hystrix Dashboard来实时监控HystrixCommand方法的执行情况。 Hystrix Dashboard可以有效地反映出每个Hystrix实例的运行情况，帮助我们快速发现系统中的问题，从而采取对应措施。</p></blockquote><h3 id="Hystrix单个实例监控"><a href="#Hystrix单个实例监控" class="headerlink" title="Hystrix单个实例监控"></a>Hystrix单个实例监控</h3><p>使用Hystrix Dashboard监控单个Hystrix实例</p><h4 id="创建hystrix-dashboard模块"><a href="#创建hystrix-dashboard模块" class="headerlink" title="创建hystrix-dashboard模块"></a>创建hystrix-dashboard模块</h4><p>hystrix-dashboard用来监控hystrix实例的执行情况</p><p><img src="https://s2.loli.net/2022/06/05/SOfGwPjR7lVyDnm.png" alt="image-20220605174356650"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h4><p><img src="https://s2.loli.net/2022/06/05/OY8MgibDVNCw6Wm.png" alt="image-20220605175849005"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8401</span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: hystrix-dashboard</span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    register-with-eureka: true</span><br><span class="line">    fetch-registry: true</span><br><span class="line">    service-url:</span><br><span class="line">      defaultZone: http://root:123456@replica1:8005/eureka,</span><br><span class="line">                   http://root:123456@replica2:8006/eureka</span><br><span class="line">hystrix:</span><br><span class="line">  dashboard:</span><br><span class="line">    proxy-stream-allow-list: &quot;localhost&quot;</span><br></pre></td></tr></table></figure><h4 id="创建启动类"><a href="#创建启动类" class="headerlink" title="创建启动类"></a>创建启动类</h4><p><img src="https://s2.loli.net/2022/06/05/kDE3ZbLcGPOxR8Y.png" alt="image-20220605175413117"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableHystrixDashboard</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HystrixDashboardApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(HystrixDashboardApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在被监控的服务添加Actuator依赖"><a href="#在被监控的服务添加Actuator依赖" class="headerlink" title="在被监控的服务添加Actuator依赖"></a>在被监控的服务添加Actuator依赖</h4><blockquote><p>Actuator是SpringBoot程序的监控系统，可以实现健康检查，记录信息等。</p></blockquote><p><img src="https://s2.loli.net/2022/06/05/ufa3zPFyjGw7q6B.png" alt="image-20220605200314158"></p><h4 id="在被监控的服务配置开启hystrix-stream监控端点"><a href="#在被监控的服务配置开启hystrix-stream监控端点" class="headerlink" title="在被监控的服务配置开启hystrix.stream监控端点"></a>在被监控的服务配置开启hystrix.stream监控端点</h4><p><img src="https://s2.loli.net/2022/06/05/8cbhMJS71vrVBiE.png" alt="image-20220605181613411"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &#x27;hystrix.stream&#x27;</span><br></pre></td></tr></table></figure><h4 id="Hystrix监控实例"><a href="#Hystrix监控实例" class="headerlink" title="Hystrix监控实例"></a>Hystrix监控实例</h4><p>访问Hystrix Dashboard：<a href="http://localhost:8401/hystrix">http://localhost:8401/hystrix</a></p><p><img src="https://s2.loli.net/2022/06/05/8SliT5JkqjKcrH3.png" alt="img"></p><p><img src="https://s2.loli.net/2022/06/05/7JmQjMbWFclp1ND.png" alt="image-20220605181313785"></p><ul><li><p>填入<a href="http://localhost:8301/actuator/hystrix.stream%EF%BC%8C%E7%82%B9%E5%87%BB%E7%9B%91%E6%8E%A7%E6%8C%89%E9%92%AE">http://localhost:8301/actuator/hystrix.stream，点击监控按钮</a></p><blockquote><p>由于本地不支持https，所以我们的地址需要填入的是http，否则会无法获取监控信息</p></blockquote><p><img src="https://s2.loli.net/2022/06/05/miQU2wXD4s3uZGl.png" alt="image-20220605200806896"></p><h3 id="Hystrix-Dashboard-图表解读"><a href="#Hystrix-Dashboard-图表解读" class="headerlink" title="Hystrix Dashboard 图表解读"></a>Hystrix Dashboard 图表解读</h3></li></ul><p><img src="https://s2.loli.net/2022/06/05/rLxDMgbQOBZSjzE.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring-Cloud-Hystrix&quot;&gt;&lt;a href=&quot;#Spring-Cloud-Hystrix&quot; class=&quot;headerlink&quot; title=&quot;Spring Cloud Hystrix&quot;&gt;&lt;/a&gt;Spring Cloud Hystrix&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
    <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud（四） 负载均衡</title>
    <link href="http://example.com/2022/05/31/04.Spring%20Cloud%EF%BC%88%E5%9B%9B%EF%BC%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>http://example.com/2022/05/31/04.Spring%20Cloud%EF%BC%88%E5%9B%9B%EF%BC%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</id>
    <published>2022-05-31T00:31:22.000Z</published>
    <updated>2022-06-04T07:07:59.338Z</updated>
    
    <content type="html"><![CDATA[<h1 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h1><p>微服务架构在生成环境中，各个微服务会部署多个实例，负载均衡就是将服务消费者的请求分摊到多个服务提供者实例的过程，它可以增加系统的可用性和扩展性。</p><p>当我们使用RestTemplate来调用其他服务时，Ribbon可以方便的是实现负载均衡，版本迭代之后由LoadBalancer替代。</p><p>LoadBalancer的优势主要在于支持响应式编程方式异步访问客户端，依赖Spring Web Flux实现客户端负载均衡调用。</p><h2 id="RestTemplate-HTTP客户端"><a href="#RestTemplate-HTTP客户端" class="headerlink" title="RestTemplate-HTTP客户端"></a>RestTemplate-HTTP客户端</h2><blockquote><p>RestTemplate是一个HTTP客户端，使用它我们可以方便的调用HTTP接口，支持GET、POST、PUT、DELETE等方法。</p></blockquote><p>这里以Get方法为例，说明RestTemplate远程调用，具体可查看RestOperations接口的方法声明。</p><h3 id="GET请求方法"><a href="#GET请求方法" class="headerlink" title="GET请求方法"></a>GET请求方法</h3><p><img src="https://s2.loli.net/2022/05/31/cAka7wFVt3dmnv1.png" alt="image-20220531145524762"></p><h4 id="getForObject方法"><a href="#getForObject方法" class="headerlink" title="getForObject方法"></a>getForObject方法</h4><p>返回对象为响应体中数据转化成对象</p><p><img src="https://s2.loli.net/2022/05/31/n9RcYBbxta1huEm.png" alt="image-20220531145953530"></p><h4 id="getForEntity方法"><a href="#getForEntity方法" class="headerlink" title="getForEntity方法"></a>getForEntity方法</h4><p>返回对象为ResponseEntity对象，包含了响应中的一些重要信息，比如响应头、响应状态码、响应体等。</p><p><img src="https://s2.loli.net/2022/05/31/6hyec7OT2JoNPzb.png" alt="image-20220531155322989"></p><p>调试运行可以看到ResponseEntity对象里的具体信息</p><p><img src="https://s2.loli.net/2022/05/31/HqZF7riKdmLEg4l.png" alt="image-20220531160107761"></p><h3 id="POST请求方法"><a href="#POST请求方法" class="headerlink" title="POST请求方法"></a>POST请求方法</h3><p><img src="https://s2.loli.net/2022/05/31/KBhko1qaprPNC53.png" alt="image-20220531161914683"></p><h3 id="PUT请求方法"><a href="#PUT请求方法" class="headerlink" title="PUT请求方法"></a>PUT请求方法</h3><p><img src="https://s2.loli.net/2022/05/31/Xqf3cVzpdlSxIgW.png" alt="image-20220531161923943"></p><h3 id="DELETE请求方法"><a href="#DELETE请求方法" class="headerlink" title="DELETE请求方法"></a>DELETE请求方法</h3><p><img src="https://s2.loli.net/2022/05/31/mR9GJfv8kMUpzuD.png" alt="image-20220531161936372"></p><h2 id="使用Ribbon实现客户端侧负载均衡"><a href="#使用Ribbon实现客户端侧负载均衡" class="headerlink" title="使用Ribbon实现客户端侧负载均衡"></a>使用Ribbon实现客户端侧负载均衡</h2><h3 id="Ribbon简介"><a href="#Ribbon简介" class="headerlink" title="Ribbon简介"></a>Ribbon简介</h3><p>Spring Cloud Ribbon 是Spring Cloud Netflix 子项目的核心组件之一，主要给服务间调用及API网关转发提供负载均衡的功能，有助于控制HTTP和TCP客户端的行为。在服务消费者拉取服务提供者地址列表后，Ribbon基于某种负载均衡算法，自动帮助服务消费者发起请求。</p><p>Ribbon提供了很多负载均衡算法，例如轮询、随机等，还支持自定义的负载均衡算法。</p><p>在Spring Cloud中，当Ribbon与Eureka配合使用时，Ribbon自动从Eureka Server获取服务提供者地址列表，并基于负载均衡算法，请求其中一个服务提供者实例。</p><p><img src="https://s2.loli.net/2022/05/31/3kn5YHRgswdcfUD.png" alt="image-20220531144624058"></p><h3 id="服务消费者整合Ribbon"><a href="#服务消费者整合Ribbon" class="headerlink" title="服务消费者整合Ribbon"></a>服务消费者整合Ribbon</h3><p>由于之前的项目使用的Spring Cloud Netflix版本已经弃用Ribbon，所有我们需要修改响应的版本信息，这里就不做过多的赘述。</p><h4 id="项目引入依赖"><a href="#项目引入依赖" class="headerlink" title="项目引入依赖"></a>项目引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h4><p>主要配置端口、注册中心地址以及服务调用路径</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8301</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/cloudstudy_borrow</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">13851176590</span><span class="string">++</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">borrow-service</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@replica1:8005/eureka,</span></span><br><span class="line">                   <span class="string">http://root:123456@replica2:8006/eureka</span></span><br><span class="line"><span class="attr">service-url:</span></span><br><span class="line">  <span class="attr">user-service:</span> <span class="string">http://user-service</span></span><br><span class="line">  <span class="attr">book-service:</span> <span class="string">http://book-service</span></span><br></pre></td></tr></table></figure><h4 id="在RestTemplate注入方法上添加-LoadBalanced注解"><a href="#在RestTemplate注入方法上添加-LoadBalanced注解" class="headerlink" title="在RestTemplate注入方法上添加@LoadBalanced注解"></a>在RestTemplate注入方法上添加@LoadBalanced注解</h4><p>添加@LoadBalanced注解，就可为RestTemplate整合Ribbom，使其具备负载均衡的能力。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*注册RestTemplate对象*/</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@LoadBalanced</span></span><br><span class="line"><span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接口实现负载均衡的远程调用"><a href="#接口实现负载均衡的远程调用" class="headerlink" title="接口实现负载均衡的远程调用"></a>接口实现负载均衡的远程调用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorrowServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BorrowService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    BorrowMapper borrowMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;service-url.user-service&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String userServiceUrl;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;service-url.book-service&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bookServiceUrl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserBorrowDetail <span class="title function_">getBorrowByUser</span><span class="params">(Long uid)</span> &#123;</span><br><span class="line">        List&lt;Borrow&gt; borrows = borrowMapper.getBorrow(uid,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> restTemplate.getForObject(userServiceUrl + <span class="string">&quot;/user/&quot;</span> + uid, User.class);</span><br><span class="line">        List&lt;Book&gt; books = borrows.stream().map(borrow -&gt; restTemplate.getForObject(bookServiceUrl + <span class="string">&quot;/book/&quot;</span> + borrow.getBid(), Book.class)).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserBorrowDetail</span>(user, books);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> BookBorrowDetail <span class="title function_">getBorrowByBook</span><span class="params">(Long bid)</span> &#123;</span><br><span class="line">        List&lt;Borrow&gt; borrows = borrowMapper.getBorrow(<span class="literal">null</span>,bid);</span><br><span class="line">        List&lt;User&gt; users = borrows.stream().map(borrow -&gt; restTemplate.getForObject(userServiceUrl + <span class="string">&quot;/user/&quot;</span> + borrow.getUid(), User.class)).collect(Collectors.toList());</span><br><span class="line">        ResponseEntity&lt;Book&gt; entity = restTemplate.getForEntity(bookServiceUrl + <span class="string">&quot;/book/&quot;</span>+bid, Book.class);</span><br><span class="line">        <span class="keyword">if</span> (entity.getStatusCode().is2xxSuccessful()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BookBorrowDetail</span>(users, entity.getBody());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BookBorrowDetail</span>(users, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> BorrowDetail <span class="title function_">getBorrow</span><span class="params">(Long uid, Long bid)</span> &#123;</span><br><span class="line">        List&lt;Borrow&gt; borrows = borrowMapper.getBorrow(uid, bid);</span><br><span class="line">        List&lt;User&gt; users = borrows.stream().map(borrow -&gt; restTemplate.getForObject(userServiceUrl + <span class="string">&quot;/user/&quot;</span> + borrow.getUid(), User.class)).collect(Collectors.toList());</span><br><span class="line">        List&lt;Book&gt; books = borrows.stream().map(borrow -&gt; restTemplate.getForObject(bookServiceUrl + <span class="string">&quot;/book/&quot;</span> + borrow.getBid(), Book.class)).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BorrowDetail</span>(users, books);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorrowController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    BorrowService borrowService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoadBalancerClient loadBalancerClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(BorrowController.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/borrow/user/&#123;uid&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> UserBorrowDetail <span class="title function_">getBorrowByUser</span><span class="params">(<span class="meta">@PathVariable(&quot;uid&quot;)</span> Long uid)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> borrowService.getBorrowByUser(uid);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/borrow/book/&#123;bid&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> BookBorrowDetail <span class="title function_">getBorrowByBook</span><span class="params">(<span class="meta">@PathVariable(&quot;bid&quot;)</span> Long bid)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> borrowService.getBorrowByBook(bid);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/borrow&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> BorrowDetail <span class="title function_">getBorrow</span><span class="params">(<span class="meta">@RequestParam(value = &quot;uid&quot;, required = true)</span> Long uid,</span></span><br><span class="line"><span class="params">                                  <span class="meta">@RequestParam(value = &quot;bid&quot;, required = true)</span> Long bid)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> borrowService.getBorrow(uid, bid);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/log-instance&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logUserInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ServiceInstance</span> <span class="variable">serviceInstance</span> <span class="operator">=</span> <span class="built_in">this</span>.loadBalancerClient.choose(<span class="string">&quot;user-service&quot;</span>);</span><br><span class="line">        BorrowController.logger.info(<span class="string">&quot;&#123;&#125;:&#123;&#125;:&#123;&#125;&quot;</span>, serviceInstance.getServiceId(), serviceInstance.getHost(), serviceInstance.getPort());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Ribbon原理"><a href="#Ribbon原理" class="headerlink" title="Ribbon原理"></a>Ribbon原理</h3><p>负载均衡拦截器在获取用户的请求地址后，会获取微服务的虚拟主机名，再从注册中心拉取微服务的网络地址列表，在服务列表进行负载均衡。</p><h3 id="LoadBalancerInterceptor方法"><a href="#LoadBalancerInterceptor方法" class="headerlink" title="LoadBalancerInterceptor方法"></a>LoadBalancerInterceptor方法</h3><p><img src="https://s2.loli.net/2022/06/04/5u8lHbiq2IwLsZK.png" alt="image-20220604011042764"></p><h4 id="ClientHttpRequestInterceptor接口"><a href="#ClientHttpRequestInterceptor接口" class="headerlink" title="ClientHttpRequestInterceptor接口"></a>ClientHttpRequestInterceptor接口</h4><p><img src="https://s2.loli.net/2022/06/04/hNT4dRpDCPGmKxo.png" alt="image-20220604011204139"></p><h4 id="接口方法具体实现"><a href="#接口方法具体实现" class="headerlink" title="接口方法具体实现"></a>接口方法具体实现</h4><p><img src="https://s2.loli.net/2022/06/04/N1i2zUhcSsEMZTG.png" alt="image-20220604011815218"></p><h4 id="负载均衡接口"><a href="#负载均衡接口" class="headerlink" title="负载均衡接口"></a>负载均衡接口</h4><p><img src="https://s2.loli.net/2022/06/04/IEDUkSawVr6Bo38.png" alt="image-20220604011927175"></p><h4 id="RibbonLoadBalancerClient"><a href="#RibbonLoadBalancerClient" class="headerlink" title="RibbonLoadBalancerClient"></a>RibbonLoadBalancerClient</h4><p><img src="https://s2.loli.net/2022/06/04/hS5IYyFbMdzEP93.png" alt="image-20220604012252580"></p><p><img src="https://s2.loli.net/2022/06/04/jxzdhaRfpMbri8g.png" alt="image-20220604013037564"></p><p><img src="https://s2.loli.net/2022/06/04/tNSx4zEI1PjUOHe.png" alt="image-20220604020317394"></p><h3 id="Ribbon负载均衡策略"><a href="#Ribbon负载均衡策略" class="headerlink" title="Ribbon负载均衡策略"></a>Ribbon负载均衡策略</h3><p>Ribbon的负载均衡规则是由IRule的接口定义，每一个子接口对应一种规则。</p><p><img src="https://s2.loli.net/2022/06/04/hnHiXkwaAFRm264.png" alt="image-20220604021231385"></p><blockquote><ul><li>com.netflix.loadbalancer.RandomRule：从提供服务的实例中以随机的方式；</li><li>com.netflix.loadbalancer.RoundRobinRule：以线性轮询的方式，就是维护一个计数器，从提供服务的实例中按顺序选取，第一次选第一个，第二次选第二个，以此类推，到最后一个以后再从头来过；</li><li>com.netflix.loadbalancer.RetryRule：在RoundRobinRule的基础上添加重试机制，即在指定的重试时间内，反复使用线性轮询策略来选择可用实例；</li><li>com.netflix.loadbalancer.WeightedResponseTimeRule：对RoundRobinRule的扩展，响应速度越快的实例选择权重越大，越容易被选择；</li><li>com.netflix.loadbalancer.BestAvailableRule：选择并发较小的实例；</li><li>com.netflix.loadbalancer.AvailabilityFilteringRule：先过滤掉故障实例，再选择并发较小的实例；</li><li>com.netflix.loadbalancer.ZoneAwareLoadBalancer：采用双重过滤，同时过滤不是同一区域的实例和故障实例，选择并发较小的实例。</li></ul></blockquote><p>通过自定义定义IRule实现可以修改负载均衡规则，由以下两种方式实现：</p><ul><li><h5 id="配置类IRule注入-全局配置"><a href="#配置类IRule注入-全局配置" class="headerlink" title="配置类IRule注入(全局配置)"></a>配置类IRule注入(全局配置)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> IRule <span class="title function_">randomRule</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RandomRule</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="配置文件方式-服务绑定"><a href="#配置文件方式-服务绑定" class="headerlink" title="配置文件方式(服务绑定)"></a>配置文件方式(服务绑定)</h5></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user-service:</span></span><br><span class="line">  <span class="attr">ribbon:</span></span><br><span class="line">    <span class="attr">NFLoadBalanverRuleClassName:</span> <span class="string">com.netflix.loadbalancer.RandomRule</span></span><br></pre></td></tr></table></figure><h3 id="Ribbon饥饿加载"><a href="#Ribbon饥饿加载" class="headerlink" title="Ribbon饥饿加载"></a>Ribbon饥饿加载</h3><p>Ribbon默认是采用懒加载，即第一次访问时会去创建LoadBalanceClient，请求时间很长</p><p>使用Ribbon的饥饿加载会在项目开启时创建，降低第一次访问的耗时</p><p>开启饥饿加载的方式，配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="attr">eager-load:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">clients:</span></span><br><span class="line">      <span class="string">-user-service</span></span><br><span class="line">      <span class="string">-book-service</span></span><br></pre></td></tr></table></figure><h2 id="使用LoadBalancer实现客户端侧负载均衡"><a href="#使用LoadBalancer实现客户端侧负载均衡" class="headerlink" title="使用LoadBalancer实现客户端侧负载均衡"></a>使用LoadBalancer实现客户端侧负载均衡</h2><h3 id="服务消费者整合LoadBalancer"><a href="#服务消费者整合LoadBalancer" class="headerlink" title="服务消费者整合LoadBalancer"></a>服务消费者整合LoadBalancer</h3><p>整合步骤和Ribbon的整合步骤基本一致，只是依赖版本不同且无需引入Ribbon</p><p><img src="https://s2.loli.net/2022/06/04/FjU71SVsuKqReNJ.png" alt="image-20220604031524461"></p><h3 id="LoadBalancer原理"><a href="#LoadBalancer原理" class="headerlink" title="LoadBalancer原理"></a>LoadBalancer原理</h3><p><img src="https://s2.loli.net/2022/06/04/HntcLGT71OI8ezf.png" alt="img"></p><h4 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h4><p><img src="https://s2.loli.net/2022/06/04/souvc8PDjrLiEa9.jpg" alt="img"></p><h4 id="LoadBalanced注解开启负载均衡"><a href="#LoadBalanced注解开启负载均衡" class="headerlink" title="@LoadBalanced注解开启负载均衡"></a>@LoadBalanced注解开启负载均衡</h4><p><img src="https://s2.loli.net/2022/05/31/FVTlEocZC7dAgX4.png" alt="image-20220531102500703"></p><h4 id="客户端HTTP请求拦截器接口"><a href="#客户端HTTP请求拦截器接口" class="headerlink" title="客户端HTTP请求拦截器接口"></a>客户端HTTP请求拦截器接口</h4><p><img src="https://s2.loli.net/2022/05/31/NXIVysgG1m3f8Zn.png" alt="image-20220531102426240"></p><h4 id="负载均衡拦截器实现接口"><a href="#负载均衡拦截器实现接口" class="headerlink" title="负载均衡拦截器实现接口"></a>负载均衡拦截器实现接口</h4><p><img src="https://s2.loli.net/2022/05/31/EZq7PAYWDn6Nbmx.png" alt="image-20220531102336211"></p><h4 id="负载均衡客户端中execute接口方法"><a href="#负载均衡客户端中execute接口方法" class="headerlink" title="负载均衡客户端中execute接口方法"></a>负载均衡客户端中execute接口方法</h4><p><img src="https://s2.loli.net/2022/06/04/JwUVaTtpf26NiZK.png" alt="image-20220604031737840"></p><h4 id="BlockingLoadBalancerClient实现execute方法"><a href="#BlockingLoadBalancerClient实现execute方法" class="headerlink" title="BlockingLoadBalancerClient实现execute方法"></a>BlockingLoadBalancerClient实现execute方法</h4><p><img src="https://s2.loli.net/2022/06/04/JyHrIVhnLdkEN21.png" alt="image-20220604033125528"></p><h4 id="choose具体实现"><a href="#choose具体实现" class="headerlink" title="choose具体实现"></a>choose具体实现</h4><p><img src="https://s2.loli.net/2022/06/04/zrxKo9I2AJhQYEb.png" alt="image-20220604034427604"></p><h4 id="ReactiveLoadBalancer被不同规则的负载均衡器实现"><a href="#ReactiveLoadBalancer被不同规则的负载均衡器实现" class="headerlink" title="ReactiveLoadBalancer被不同规则的负载均衡器实现"></a>ReactiveLoadBalancer被不同规则的负载均衡器实现</h4><p><img src="https://s2.loli.net/2022/06/04/CifzRdGSx9UeF7v.png" alt="image-20220604034601307"></p><h4 id="默认由RoundRobinLoadBalancer即轮询负载均衡实现"><a href="#默认由RoundRobinLoadBalancer即轮询负载均衡实现" class="headerlink" title="默认由RoundRobinLoadBalancer即轮询负载均衡实现"></a>默认由RoundRobinLoadBalancer即轮询负载均衡实现</h4><p><img src="https://s2.loli.net/2022/06/04/P9qwhCGmdnS2oKJ.png" alt="image-20220604035134969"></p><h3 id="自定义负载均衡策略"><a href="#自定义负载均衡策略" class="headerlink" title="自定义负载均衡策略"></a>自定义负载均衡策略</h3><h4 id="创建负载均衡配置类"><a href="#创建负载均衡配置类" class="headerlink" title="创建负载均衡配置类"></a>创建负载均衡配置类</h4><p><img src="https://s2.loli.net/2022/06/04/lHi542fqrPbzvwZ.png" alt="image-20220604041507416"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoadBalancerConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ReactorLoadBalancer&lt;ServiceInstance&gt; <span class="title function_">randomLoadBalancer</span> <span class="params">(Environment environment, LoadBalancerClientFactory loadBalancerClientFactory)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> environment.getProperty(LoadBalancerClientFactory.PROPERTY_NAME);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RandomLoadBalancer</span>(loadBalancerClientFactory.getLazyProvider(name, ServiceInstanceListSupplier.class), name)<span class="comment">/*随机负载均衡策略*/</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="为指定服务指定负载均衡策略"><a href="#为指定服务指定负载均衡策略" class="headerlink" title="为指定服务指定负载均衡策略"></a>为指定服务指定负载均衡策略</h4><p><img src="https://s2.loli.net/2022/06/04/RTznUVK461PiZCo.png" alt="image-20220604125902447"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@LoadBalancerClients(</span></span><br><span class="line"><span class="meta">        value = &#123;</span></span><br><span class="line"><span class="meta">                @LoadBalancerClient(value = &quot;user-service&quot;, configuration = LoadBalancerConfig.class),</span></span><br><span class="line"><span class="meta">                @LoadBalancerClient(value = &quot;book-service&quot;, configuration = LoadBalancerConfig.class)</span></span><br><span class="line"><span class="meta">        &#125;, defaultConfiguration = LoadBalancerClientConfiguration.class</span></span><br><span class="line"><span class="meta">)</span></span><br></pre></td></tr></table></figure><p>我们发现远程调用user-service服务不在是通过轮询的方式，而是通过随机的负载均衡策略实现</p><p><img src="https://s2.loli.net/2022/06/04/67SJVhtDiTkIqNF.png" alt="image-20220604130204288"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;负载均衡&quot;&gt;&lt;a href=&quot;#负载均衡&quot; class=&quot;headerlink&quot; title=&quot;负载均衡&quot;&gt;&lt;/a&gt;负载均衡&lt;/h1&gt;&lt;p&gt;微服务架构在生成环境中，各个微服务会部署多个实例，负载均衡就是将服务消费者的请求分摊到多个服务提供者实例的过程，它可以增加系</summary>
      
    
    
    
    
    <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud（三） Eureka</title>
    <link href="http://example.com/2022/05/30/03.Spring%20Cloud%EF%BC%88%E4%B8%89%EF%BC%89Eureka/"/>
    <id>http://example.com/2022/05/30/03.Spring%20Cloud%EF%BC%88%E4%B8%89%EF%BC%89Eureka/</id>
    <published>2022-05-30T00:31:22.000Z</published>
    <updated>2022-05-31T01:20:44.164Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务注册与发现-Spring-Cloud-Eureka"><a href="#服务注册与发现-Spring-Cloud-Eureka" class="headerlink" title="服务注册与发现-Spring Cloud Eureka"></a>服务注册与发现-Spring Cloud Eureka</h1><p>Spring Cloud Eureka是Spring Cloud Netflix子项目的核心组件之一。主要用于微服务架构中的<strong>服务治理</strong>。</p><p>本章主要介绍微服务远程调用的<strong>提供者</strong>和<strong>消费者</strong>、<strong>Eureka</strong>的简介、Eureka<strong>注册中心</strong>的搭建、Eureka<strong>客户端</strong>的搭建、Eureka<strong>集群</strong>的搭建以及Eureka注册中心<strong>添加登录认证</strong>的方法。</p><h2 id="微服务远程调用的提供者和消费者"><a href="#微服务远程调用的提供者和消费者" class="headerlink" title="微服务远程调用的提供者和消费者"></a>微服务远程调用的提供者和消费者</h2><p>服务提供者：暴露接口给其他微服务调用</p><p>服务消费者：调用其他微服务提供的接口</p><p>服务提供者和消费者角色是<strong>相对</strong>的，一个服务可以同时是服务提供者和服务消费者</p><h2 id="服务调用存在的问题"><a href="#服务调用存在的问题" class="headerlink" title="服务调用存在的问题"></a>服务调用存在的问题</h2><p>在上一个微服务项目中，借阅服务使用RestTemplate调用用户和书籍微服务中的RESTFUL API，但是我们是将服务提供者的请求网络地址（IP和端口等）硬编码在代码中，这样做存在一定的问题：</p><ul><li>使用场景局限性强。如果服务提供的网络地址发送改变，将影响整个服务消费者。</li><li>无法动态伸缩。在实际的生产环境中，每个微服务一般都会部署多个实例以实现容灾和负载均衡，此外系统还应具备自动伸缩的能力，例如动态增减节点等。显然硬编码的方式难以实现上述需求。</li></ul><p>需要解决的问题：</p><ul><li>服务消费者如何获取服务提供者的地址信息和健康状态</li><li>服务消费者如何在多个服务提供者中进行选择，从而实现负载均衡和容灾处理 </li></ul><h2 id="服务发现机制"><a href="#服务发现机制" class="headerlink" title="服务发现机制"></a>服务发现机制</h2><p>面对硬编码提供服务提供地址的方式所带来的诸多问题，服务消费者需要一个强大的服务发现机制，服务消费者基于这种机制获取服务提供者的网络信息。这种机制可以通过微服务架构中的服务发现组件实现。</p><p>微服务项目使用服务发现组件后，系统的架构图如下：</p><p><img src="https://s2.loli.net/2022/05/29/lV7JcfMqwuCXySo.png" alt="image-20220529162012664"></p><p>其中服务提供者、服务消费者、服务发现组件的关系如下：</p><ul><li>各个微服务将自己的网络地址等信息注册并存储到服务发现组件中，当微服务的网络地址发送变更时，会重新注册到服务发现组件。</li><li>服务消费者从服务发现组件查询服务提供者的网络地址并使用地址调用服务提供者的接口</li><li>各个微服务与服务发现组件使用一定机制通信（例如心跳），服务发现组件如长时间无法与某微服务实例通信即发现某微服务实例无法访问，该实例则会被注销。</li></ul><p>服务发现组件具备功能如下：</p><ul><li>服务注册表：作为服务发现组件的核心，用于记录各个微服务的信息（包括名称、IP、端口等）。服务注册表提供查询API和管理API，查询API用于查询可用的微服务实例，管理API用于服务的注册和注销。</li><li>服务注册：当微服务启动时，将自己的信息注册到服务发现组件的过程。</li><li>服务发现：查询可用微服务列表及其网络地址的机制。</li><li>服务检查：服务发现组件使用一定的机制定时检测已注册的服务。</li></ul><h2 id="Eureka简介"><a href="#Eureka简介" class="headerlink" title="Eureka简介"></a>Eureka简介</h2><p>Spring Cloud Eureka是Netflix开源的服务发现组件，是基于REST的服务。它包含Server和Client两部分来实现服务的注册与发现。</p><p>每个微服务启动时向注册中心注册组件自己的地址及端口信息，注册中心维护着服务名称与服务实例的对应关系。每个微服务会定时从注册中心拉去服务信息列表，同时通过发送心跳等方式定时汇报自己的运行状态。当服务调用其他服务时。可以从自己获取到的服务列表中获取实例地址来进行远程调用 。</p><p>在基于Eureka的架构中，微服务角色可以被分成两类：</p><ul><li>Eureka Server：Eureka服务端即注册中心<ul><li>记录服务信息</li><li>心跳状态监控</li></ul></li><li>Eureka Client：Eureka客户端<ul><li>Provide：服务提供者<ul><li>注册服务信息到Eureka Server即注册中心</li><li>定时发送心跳汇报自己的运行状态</li></ul></li><li>Comsumer：服务消费者<ul><li>根据服务名称从Eureka Server即注册中心拉取服务列表</li><li>基于服务列表，使用负载均衡选中一个微服务的网络地址发起远程调用</li></ul></li></ul></li></ul><p><img src="https://s2.loli.net/2022/05/29/Z54x8MlcA3JFjna.png" alt="image-20220529162224930"></p><h2 id="Eureka原理"><a href="#Eureka原理" class="headerlink" title="Eureka原理"></a>Eureka原理</h2><p>Eureka架构图如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/7a7a226a66be550b3408854d90f1ef2e.png" alt="img"></p><ul><li>Application Service：服务提供者</li><li>Application Client：服务消费者</li><li>Make Remote Call：调用RESTful API的行为即远程调用</li></ul><p>Eureka包含两个组件：Eureka Server和Eureka Client</p><ul><li><p>Eureka Server：提供服务发现能力，各个微服务启动时，会向Eureka Server注册自己的信息（例如IP、端口、微服务名名名称等），Eureka Server会存储这些信息。</p></li><li><p>Eureka Client：是一个Java客户端，用于简化与Eureka Server的交互</p></li><li><p>心跳状态监控：当微服务启动后，微服务会周期性（默认30秒）地向Eureka Server发送心跳以及续约自己的”短租”，如果Eureka Server在一定时间内（默认90秒）没有接收到某个微服务实例的心跳，Eureka Server会注销该实例。</p></li><li><p>Eureka集群：在集群中，Eureka Server同样也是Eureka Client。多个Eureka Server实例，互相之间通过复制的方式来实现服务注册表中数据的同步。</p></li><li><p>Eureka Client缓存机制：Eureka Client会缓存服务注册表中的信息，微服务无须每次请求都查询Eureka Server，在降低Eureka Server压力的同时，即使Eureka Server所有节点宕掉，服务消费者依然可以使用缓存中的信息找到服务提供者网络地址并完成远程调用。</p><p>综上，Eureka通过心跳检查、客户端缓存等机制，提高了系统的灵活性和可用性。</p></li></ul><h2 id="搭建Eureka-Server即注册中心"><a href="#搭建Eureka-Server即注册中心" class="headerlink" title="搭建Eureka Server即注册中心"></a>搭建Eureka Server即注册中心</h2><h3 id="新建模块"><a href="#新建模块" class="headerlink" title="新建模块"></a>新建模块</h3><p><img src="https://s2.loli.net/2022/05/29/VlEBvsemphJWNAy.png" alt="image-20220529230825482"></p><p><img src="https://s2.loli.net/2022/05/29/y7BtOR1CTZJwbSv.png" alt="image-20220529230839199"></p><p><img src="https://s2.loli.net/2022/05/29/pyPvc6bijFMU7rD.png" alt="image-20220529230945601"></p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><h4 id="父项目中引入SpringCloud的依赖"><a href="#父项目中引入SpringCloud的依赖" class="headerlink" title="父项目中引入SpringCloud的依赖"></a>父项目中引入SpringCloud的依赖</h4><p><img src="https://s2.loli.net/2022/05/29/eiv41sVUwBCXjPg.png" alt="image-20220529233013558"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2021.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Eureka-Server项目添加依赖"><a href="#Eureka-Server项目添加依赖" class="headerlink" title="Eureka Server项目添加依赖"></a>Eureka Server项目添加依赖</h4><p><img src="https://s2.loli.net/2022/05/29/1b9porZfUy8Y4qJ.png" alt="image-20220529233048159"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写启动类并添加-EnableEurekaServer注解"><a href="#编写启动类并添加-EnableEurekaServer注解" class="headerlink" title="编写启动类并添加@EnableEurekaServer注解"></a>编写启动类并添加@EnableEurekaServer注解</h3><p><img src="https://s2.loli.net/2022/05/30/rLFcptg8yWd7qjG.png" alt="image-20220530090833112"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span><span class="comment">/*启用Euerka注册中心功能*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EurekaServerApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(EurekaServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><p><img src="https://s2.loli.net/2022/05/29/ui9QmqMoplUAg5J.png" alt="image-20220529234631910"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span> <span class="comment">#指定运行端口</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment">#指定服务名称</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span> <span class="comment">#指定主机地址</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment">#指定是否要从注册中心获取服务</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span> <span class="comment">#指定是否要注册到注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8001/eureka</span> <span class="comment">#Eureka Server交互地址,Eureka服务地址指向自己</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">enable-self-preservation:</span> <span class="literal">false</span> <span class="comment">#关闭保护模式</span></span><br></pre></td></tr></table></figure><h3 id="运行Eureka-Server应用"><a href="#运行Eureka-Server应用" class="headerlink" title="运行Eureka Server应用"></a>运行Eureka Server应用</h3><p><img src="https://s2.loli.net/2022/05/30/mupVIvriWRH2yAe.png" alt="image-20220530091057577"></p><h3 id="Eureka注册中心界面"><a href="#Eureka注册中心界面" class="headerlink" title="Eureka注册中心界面"></a>Eureka注册中心界面</h3><p>访问地址<a href="http://localhost:8001/">http://localhost:8001</a></p><p><img src="https://s2.loli.net/2022/05/30/CN8VoKwLfgvylqd.png" alt="image-20220530091231252"></p><h2 id="搭建Eureka-Client"><a href="#搭建Eureka-Client" class="headerlink" title="搭建Eureka Client"></a>搭建Eureka Client</h2><h3 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h3><h4 id="在Eureka-Client模块添加依赖"><a href="#在Eureka-Client模块添加依赖" class="headerlink" title="在Eureka Client模块添加依赖"></a>在Eureka Client模块添加依赖</h4><p><img src="https://s2.loli.net/2022/05/30/KVRC3HctnaWQAGZ.png" alt="image-20220530092853838"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加Eureka客户端配置"><a href="#添加Eureka客户端配置" class="headerlink" title="添加Eureka客户端配置"></a>添加Eureka客户端配置</h4><p><img src="https://s2.loli.net/2022/05/30/uSjH3VkJynCpXdt.png" alt="image-20220530094314995"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8101</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://localhost:3306/cloudstudy_user</span><br><span class="line">    username: root</span><br><span class="line">    password: 13851176590++</span><br><span class="line">  application:</span><br><span class="line">    name: user-service</span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    register-with-eureka: true</span><br><span class="line">    fetch-registry: true</span><br><span class="line">    service-url:</span><br><span class="line">      defaultZone: http://localhost:8001/eureka #配置注册中心地址</span><br></pre></td></tr></table></figure><h4 id="启动类添加-EnableDiscoveryClient注解"><a href="#启动类添加-EnableDiscoveryClient注解" class="headerlink" title="启动类添加@EnableDiscoveryClient注解"></a>启动类添加@EnableDiscoveryClient注解</h4><p><img src="https://s2.loli.net/2022/05/30/4179hFemiDjsCNU.png" alt="image-20220530094043696"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="启动Eureka-client"><a href="#启动Eureka-client" class="headerlink" title="启动Eureka-client"></a>启动Eureka-client</h4><p><img src="https://s2.loli.net/2022/05/30/AhjuavyoBYZpzxt.png" alt="image-20220530094828200"></p><h4 id="多实例注册"><a href="#多实例注册" class="headerlink" title="多实例注册"></a>多实例注册</h4><p><img src="https://s2.loli.net/2022/05/30/v6e9Dg3zK124CFZ.png" alt="image-20220530103422230"></p><p><img src="https://s2.loli.net/2022/05/30/wIiRWnvJZUKoBSP.png" alt="image-20220530103502163"></p><p><img src="https://s2.loli.net/2022/05/30/eKNQI9Oz6Mj57wF.png" alt="image-20220530103756735"></p><p><img src="https://s2.loli.net/2022/05/30/pbPG2DtsRF6ulZe.png" alt="image-20220530103833705"></p><p>多实例注册提高了微服务的可用性，保证系统的安全性</p><h3 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h3><p>服务拉取是基于名称获取服务列表，再对服务列表做负载均衡</p><h4 id="服务名代替网络地址"><a href="#服务名代替网络地址" class="headerlink" title="服务名代替网络地址"></a>服务名代替网络地址</h4><p><img src="https://s2.loli.net/2022/05/30/JoEukZp3wLnlcKv.png" alt="image-20220530102056442"></p><h4 id="添加负载均衡注解"><a href="#添加负载均衡注解" class="headerlink" title="添加负载均衡注解"></a>添加负载均衡注解</h4><p><img src="https://s2.loli.net/2022/05/30/PItDYak79eC1ldz.png" alt="image-20220530102208990"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*注册RestTemplate对象*/</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@LoadBalanced</span></span><br><span class="line"><span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/30/A2TDOLv9s3Rh8Bt.png" alt="image-20220530103935690"></p><h2 id="搭建Eureka注册中心集群"><a href="#搭建Eureka注册中心集群" class="headerlink" title="搭建Eureka注册中心集群"></a>搭建Eureka注册中心集群</h2><p>搭建Eureka注册中心集群，实现注册中心的高可用</p><p>Eureka Client会定时连接Eureka Server获取服务注册表中的信息并缓存在本地，由于Eureka Client的缓存机制，微服务在远程调用时总是使用本地缓存中的数据，即使在Eureka Server发生宕机的情况，也不会影响服务之间的调用，但如果某些服务出现了不可用的情况，Eureka Client的缓存信息没有被更新，就会影响微服务的调用，甚至影响系统的可用性。因此，在现实的生产环境中我们需要部署一个多节点、高可用的Eureka Server集群。</p><p>Eureka Server可以通过运行多个实例以及相互注册的方式实现高可用的部署，Eureka Server实例会彼此增量地同步信息，从而确保所有节点数据的一致性。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/888d4743950f5566e914d44d5c12d435.png" alt="image-20220323205531185"></p><h3 id="搭建两个注册中心"><a href="#搭建两个注册中心" class="headerlink" title="搭建两个注册中心"></a>搭建两个注册中心</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>在eureka-server添加配置文件application-replica1.yml配置第二个注册中心</p><p><img src="https://s2.loli.net/2022/05/30/lIAzOuCenGBqL1J.png" alt="image-20220530152133297"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8002</span> <span class="comment">#指定运行端口</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment">#指定服务名称</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">replica1</span> <span class="comment">#指定主机地址</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span> <span class="comment">#指定是否要从注册中心获取服务</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span> <span class="comment">#指定是否要注册到注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://replica2:8003/eureka</span> <span class="comment">#服务地址</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/30/VkUzIL3oQSuCcAN.png" alt="image-20220530152146152"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8003</span> <span class="comment">#指定运行端口</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment">#指定服务名称</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">replica2</span> <span class="comment">#指定主机地址</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span> <span class="comment">#指定是否要从注册中心获取服务</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span> <span class="comment">#指定是否要注册到注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://replica1:8002/eureka</span> <span class="comment">#服务地址</span></span><br></pre></td></tr></table></figure><p>通过两个个注册中心的相互注册，搭建了注册中心的双节点集群</p><h4 id="修改hosts文件"><a href="#修改hosts文件" class="headerlink" title="修改hosts文件"></a>修改hosts文件</h4><p>由于defaultZone使用了自定义地址，需要配置系统的hosts文件</p><p>Mac下文件路径为<code>/etc/hosts</code>，Windows下为<code>C:\Windows\system32\drivers\etc\hosts</code>:</p><p><img src="https://s2.loli.net/2022/05/30/aROKhgqMjJYDBiN.png" alt="image-20220530135729704"></p><h3 id="运行Eureka注册中心集群"><a href="#运行Eureka注册中心集群" class="headerlink" title="运行Eureka注册中心集群"></a>运行Eureka注册中心集群</h3><p>通过不同的配置文件启动同一个Spring Boot应用</p><h4 id="添加启动配置"><a href="#添加启动配置" class="headerlink" title="添加启动配置"></a>添加启动配置</h4><p>分别以application-replica1.yml和application-replica2.yml为活动配置文件来启动eureka-server</p><p><img src="https://s2.loli.net/2022/05/30/nqYW8zxE5itGyml.png" alt="image-20220530153529543"></p><p><img src="https://s2.loli.net/2022/05/30/TkxSCoaQ9ndVFjg.png" alt="image-20220530153736918"></p><p><img src="https://s2.loli.net/2022/05/30/MVf6XPrvLiN3Jkn.png" alt="image-20220530153815504"></p><h4 id="启用两个eurake-server节点"><a href="#启用两个eurake-server节点" class="headerlink" title="启用两个eurake server节点"></a>启用两个eurake server节点</h4><p><img src="https://s2.loli.net/2022/05/30/E9UJgYLDir5Ipk6.png" alt="image-20220530154937885"></p><p>访问其中一个注册中心<a href="http://replica1:8002/">http://replica1:8002</a>发现另一个已经成为其备份</p><p><img src="https://s2.loli.net/2022/05/30/PGNCmWqEow7RJvp.png" alt="image-20220530155052338"></p><h3 id="应用注册到Eureka-Server集群"><a href="#应用注册到Eureka-Server集群" class="headerlink" title="应用注册到Eureka Server集群"></a>应用注册到Eureka Server集群</h3><p>配置多个Eureka Server地址，将其注册到多个Eureka Server集群中</p><p><img src="https://s2.loli.net/2022/05/30/A2pcj36ZWqMVQkC.png" alt="image-20220530155802325"></p><p>启动微服务</p><p><img src="https://s2.loli.net/2022/05/30/xN8cFTbfzDQJ3gK.png" alt="image-20220530163228042"></p><h2 id="Eureka-Server注册中心添加认证"><a href="#Eureka-Server注册中心添加认证" class="headerlink" title="Eureka Server注册中心添加认证"></a>Eureka Server注册中心添加认证</h2><p>Eureka Server是默认允许匿名访问，我们考研构建一个需要登录才可以访问的Eureka Server</p><h3 id="创建eureka-security-server模块"><a href="#创建eureka-security-server模块" class="headerlink" title="创建eureka-security-server模块"></a>创建eureka-security-server模块</h3><p><img src="https://s2.loli.net/2022/05/30/F4ObCNjRmPVAyrU.png" alt="image-20220530164447800"></p><h4 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h4><p><img src="https://s2.loli.net/2022/05/30/RQF5eyD82L7izux.png" alt="image-20220530170636183"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加配置文件-1"><a href="#添加配置文件-1" class="headerlink" title="添加配置文件"></a>添加配置文件</h4><p>主要配置登录注册中心的用户名和密码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8004</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-security-server</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8004/eureka</span></span><br></pre></td></tr></table></figure><h4 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EurekaSecurityServerApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(EnableEurekaServer.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加Java配置WebSecurityConfig"><a href="#添加Java配置WebSecurityConfig" class="headerlink" title="添加Java配置WebSecurityConfig"></a>添加Java配置WebSecurityConfig</h4><p>默认情况下，添加Spring  Security依赖的应用，每个请求需要添加CSRF token才可以访问。配置Eureka客户端注册时不用添加即配置/eureka/**路径不需要CSRF token</p><p><img src="https://s2.loli.net/2022/05/30/ehyfAtsCYO3UkTo.png" alt="image-20220530171701890"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        http.csrf().ignoringAntMatchers(<span class="string">&quot;/eureka/**&quot;</span>);</span><br><span class="line">        <span class="built_in">super</span>.configure(http);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行eureka-security-server"><a href="#运行eureka-security-server" class="headerlink" title="运行eureka-security-server"></a>运行eureka-security-server</h4><p>访问<a href="http://localhost:8004/%E9%9C%80%E8%A6%81%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81">http://localhost:8004/需要登录认证</a></p><p><img src="https://s2.loli.net/2022/05/30/TSlE5UI7ORMkdif.png" alt="image-20220530171039729"></p><p><img src="https://s2.loli.net/2022/05/30/daWvRHf7knqMP8L.png" alt="image-20220530171105097"></p><h3 id="注册服务到登录认证的注册中心"><a href="#注册服务到登录认证的注册中心" class="headerlink" title="注册服务到登录认证的注册中心"></a>注册服务到登录认证的注册中心</h3><h4 id="修改配置文件中注册中心地址格式"><a href="#修改配置文件中注册中心地址格式" class="headerlink" title="修改配置文件中注册中心地址格式"></a>修改配置文件中注册中心地址格式</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostname&#125;:$&#123;port&#125;/eureka</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/30/gQmkXL1C9YshdlH.png" alt="image-20220530171734918"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@localhost:8004/eureka</span> <span class="comment">#配置注册中心地址</span></span><br></pre></td></tr></table></figure><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><p><img src="https://s2.loli.net/2022/05/30/wyqGXxbNBTVrj1A.png" alt="image-20220530171929036"></p><h3 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h3><h4 id="创建两个配置文件"><a href="#创建两个配置文件" class="headerlink" title="创建两个配置文件"></a>创建两个配置文件</h4><p><img src="https://s2.loli.net/2022/05/31/RGXeISWEBv63hDQ.png" alt="image-20220531002656132"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8005</span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: eureka-security-server</span><br><span class="line">  security:</span><br><span class="line">    user:</span><br><span class="line">      name: root</span><br><span class="line">      password: 123456</span><br><span class="line">eureka:</span><br><span class="line">  instance:</span><br><span class="line">    hostname: replica1</span><br><span class="line">  client:</span><br><span class="line">    fetch-registry: true</span><br><span class="line">    register-with-eureka: true</span><br><span class="line">    service-url:</span><br><span class="line">      defaultZone: http://root:123456@replica2:8006/eureka</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/31/HbkdMBzK6juVtQv.png" alt="image-20220531002750066"></p><h4 id="添加启动配置-1"><a href="#添加启动配置-1" class="headerlink" title="添加启动配置"></a>添加启动配置</h4><p><img src="https://s2.loli.net/2022/05/31/ZSb7uDLYAE319I6.png" alt="image-20220531002857225"></p><h4 id="服务实例注册集群"><a href="#服务实例注册集群" class="headerlink" title="服务实例注册集群"></a>服务实例注册集群</h4><p><img src="https://s2.loli.net/2022/05/31/YjLv6xli2ZysBOf.png" alt="image-20220531003217666"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://root:123456@replica1:8005/eureka,</span></span><br><span class="line">                   <span class="string">http://root:123456@replica2:8006/eureka</span></span><br></pre></td></tr></table></figure><h4 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h4><p><img src="https://s2.loli.net/2022/05/31/PtduxykDXIG2bi1.png" alt="image-20220531003451642"></p><p><img src="https://s2.loli.net/2022/05/31/2oHqwz1DRAyKCEh.png" alt="image-20220531003504170"></p><p><img src="https://s2.loli.net/2022/05/31/PjOv7SgFnuY826I.png" alt="image-20220531003553520"></p><h2 id="Eureka常用配置"><a href="#Eureka常用配置" class="headerlink" title="Eureka常用配置"></a>Eureka常用配置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span> <span class="comment">#eureka客户端配置</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span> <span class="comment">#是否将自己注册到eureka服务器</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span> <span class="comment">#是否获取eureka服务端上注册的服务列表</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8001/eureka</span> <span class="comment">#指定注册中心地址</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#启用eureka客户端</span></span><br><span class="line">    <span class="attr">registry-fetch-interval-seconds:</span> <span class="number">30</span> <span class="comment">#定义从eureka服务端获取服务列表的时间间隔</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">lease-renewal-interval-in-seconds:</span> <span class="number">30</span> <span class="comment">#定义服务注册中心续约的时间间隔</span></span><br><span class="line">    <span class="attr">lease-expiration-duration-in-seconds:</span> <span class="number">90</span> <span class="comment">#定义服务多久不去续约认为服务失效</span></span><br><span class="line">    <span class="attr">metadata-map:</span></span><br><span class="line">      <span class="attr">zone:</span> <span class="string">jiangsu</span> <span class="comment">#所在区域</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span> <span class="comment">#服务主机名称</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">false</span> <span class="comment">#是否优先使用ip来作为主机名</span></span><br><span class="line">  <span class="attr">server:</span> <span class="comment">#eureka服务端配置</span></span><br><span class="line">    <span class="attr">enable-self-preservation:</span> <span class="literal">false</span> <span class="comment">#关闭eureka服务端的保护机制</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;服务注册与发现-Spring-Cloud-Eureka&quot;&gt;&lt;a href=&quot;#服务注册与发现-Spring-Cloud-Eureka&quot; class=&quot;headerlink&quot; title=&quot;服务注册与发现-Spring Cloud Eureka&quot;&gt;&lt;/a&gt;服务注册与</summary>
      
    
    
    
    
    <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud（二）微服务实战</title>
    <link href="http://example.com/2022/05/28/02.Spring%20Cloud%EF%BC%88%E4%BA%8C%EF%BC%89%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2022/05/28/02.Spring%20Cloud%EF%BC%88%E4%BA%8C%EF%BC%89%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/</id>
    <published>2022-05-28T12:10:10.000Z</published>
    <updated>2022-05-29T07:15:11.913Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微服务实战"><a href="#微服务实战" class="headerlink" title="微服务实战"></a>微服务实战</h1><p>本项目示例是一个图书借阅系统，本教程会更加注重于架构设计上的讲解，弱化业务功能和实现原理方面的研究。</p><h2 id="服务的拆分"><a href="#服务的拆分" class="headerlink" title="服务的拆分"></a>服务的拆分</h2><ul><li>单一职责：不同微服务开发不同的业务</li><li>数据独立：每个微服务拥有自己的数据库</li><li>面向服务：将业务暴露为接口，供其他微服务使用</li></ul><h2 id="微服务项目搭建"><a href="#微服务项目搭建" class="headerlink" title="微服务项目搭建"></a>微服务项目搭建</h2><h3 id="构建父项目"><a href="#构建父项目" class="headerlink" title="构建父项目"></a>构建父项目</h3><p><img src="https://s2.loli.net/2022/05/28/a72gwLiNPjVFeRH.png" alt="image-20220528192605703"></p><p><img src="https://s2.loli.net/2022/05/28/eCGT67JqZaKtNlU.png" alt="image-20220528192547239"></p><p><img src="https://s2.loli.net/2022/05/28/RNz2cU6XVTPt9fK.png" alt="image-20220528193009882"></p><p><img src="https://s2.loli.net/2022/05/28/USyIcn1vuzAXB9V.png" alt="image-20220528193030549"></p><p><img src="https://s2.loli.net/2022/05/28/zXlJeVg1QLt87B4.png" alt="image-20220528193137238"></p><p>父项目只负责依赖管理，删除无用文件</p><p><img src="https://s2.loli.net/2022/05/28/J7xueRdADkHwt5z.png" alt="image-20220528193644465"></p><p>导入通用依赖</p><p><img src="https://s2.loli.net/2022/05/28/ZzNhY5FTbKqHwtB.png" alt="image-20220528204437918"></p><h3 id="新建子模块"><a href="#新建子模块" class="headerlink" title="新建子模块"></a>新建子模块</h3><p><img src="https://s2.loli.net/2022/05/28/NXE49tnoBUPc3eq.png" alt="image-20220528201545755"></p><p><img src="https://s2.loli.net/2022/05/28/T5ZBHuAUWO9SGoQ.png" alt="image-20220528202339977"></p><p><img src="https://s2.loli.net/2022/05/28/8rnsHlRKtIfeEQ7.png" alt="image-20220528201719876"></p><p><img src="https://s2.loli.net/2022/05/28/YI56QSyDsnabFhO.png" alt="image-20220528202407207"></p><h4 id="创建启动类"><a href="#创建启动类" class="headerlink" title="创建启动类"></a>创建启动类</h4><p><img src="https://s2.loli.net/2022/05/28/N4ql57AQSXri1km.png" alt="image-20220528202711560"></p><p><img src="https://s2.loli.net/2022/05/28/QCdOZNnXKEcj6qT.png" alt="image-20220528202911977"></p><h4 id="创建配置文件-application-yml"><a href="#创建配置文件-application-yml" class="headerlink" title="创建配置文件-application.yml"></a>创建配置文件-application.yml</h4><p><img src="https://s2.loli.net/2022/05/28/gI9Uy7xrqkOhsVM.png" alt="image-20220528203410113"></p><h4 id="添加服务端口号"><a href="#添加服务端口号" class="headerlink" title="添加服务端口号"></a>添加服务端口号</h4><p><img src="https://s2.loli.net/2022/05/28/abqlzVI8JG2Otgm.png" alt="image-20220528203852132"></p><h4 id="导入spring-boot-starter-web依赖"><a href="#导入spring-boot-starter-web依赖" class="headerlink" title="导入spring-boot-starter-web依赖"></a>导入spring-boot-starter-web依赖</h4><p><img src="https://s2.loli.net/2022/05/28/KH85dGoLpMCzbDm.png" alt="image-20220528204039657"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h3><p>在实际的应用场景中，每个微服务都有自己的数据库服务器，按照单一职责的原则，每个微服务只会操作自己的数据库。</p><p><img src="https://s2.loli.net/2022/05/28/DYycWiIN8qjb4R6.png" alt="image-20220528234437570"></p><p><img src="https://s2.loli.net/2022/05/28/u3pVNGjP2XUcLns.png" alt="image-20220528235133900"></p><p><img src="https://s2.loli.net/2022/05/28/c78gVLrtkxBKeYT.png" alt="image-20220528235150408"></p><p><img src="https://s2.loli.net/2022/05/28/AE4pBzKDtfMalGU.png" alt="image-20220528235202429"></p><p><img src="https://s2.loli.net/2022/05/28/RBTK51ZW8McUnVS.png" alt="image-20220528235214185"></p><h4 id="添加索引"><a href="#添加索引" class="headerlink" title="添加索引"></a>添加索引</h4><p><img src="https://s2.loli.net/2022/05/29/horHEXnksBOu9vY.png" alt="image-20220529000109085"></p><p>在父项目引入MyBatis依赖进行版本管理</p><p><img src="https://s2.loli.net/2022/05/29/sjFcVO2AorpKDxf.png" alt="image-20220529001036883"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖版本号管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在子项目中引入Mybatis依赖</p><p><img src="https://s2.loli.net/2022/05/29/ndfhVgvwGiZR41b.png" alt="image-20220529001154257"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>数据源信息配置</p><p><img src="https://s2.loli.net/2022/05/29/ge3VYPZcUAHqXrz.png" alt="image-20220529001617549"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://localhost:3306/cloudstudy_user</span><br><span class="line">    username: root</span><br><span class="line">    password: 13851176590++</span><br></pre></td></tr></table></figure><h3 id="公共项目创建和引入"><a href="#公共项目创建和引入" class="headerlink" title="公共项目创建和引入"></a>公共项目创建和引入</h3><p>将服务需要用到的实体类单独放入一个项目模块中，将需要实体类的项目模块引用存放共用实体的项目，以保证每个微服务的实体类信息共用。</p><p><img src="https://s2.loli.net/2022/05/29/wpRF6obg1ZkrhM2.png" alt="image-20220529003014986"></p><p>在需要共用实体类的项目模块中引入</p><p><img src="https://s2.loli.net/2022/05/29/phz256BWgL8uCGy.png" alt="image-20220529003513439"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="书籍信息查询业务"><a href="#书籍信息查询业务" class="headerlink" title="书籍信息查询业务"></a>书籍信息查询业务</h3><p><img src="https://s2.loli.net/2022/05/29/AvF5qp8Oh1LPNyQ.png" alt="image-20220529005821372"></p><h4 id="创建Dao"><a href="#创建Dao" class="headerlink" title="创建Dao:"></a>创建Dao:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from book_info where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    Book <span class="title function_">getBookById</span><span class="params">(Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建Service"><a href="#创建Service" class="headerlink" title="创建Service:"></a>创建Service:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    Book <span class="title function_">getBookById</span><span class="params">(Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    BookMapper bookMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">getBookById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookMapper.getBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller:"></a>创建Controller:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    BookService bookService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/book/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">getBookById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookService.getBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/29/Bk2RXv7gut6r4Ld.png" alt="image-20220529011059566"></p><p>用户信息查询业务同理</p><h2 id="服务提供和消费"><a href="#服务提供和消费" class="headerlink" title="服务提供和消费"></a>服务提供和消费</h2><h3 id="借阅业务查询业务"><a href="#借阅业务查询业务" class="headerlink" title="借阅业务查询业务"></a>借阅业务查询业务</h3><p>微服务构建的是一个分布式系统，微服务之间通过网络进行通信，可以使用服务提供者与服务消费者来描述微服务之间的调用关系。</p><p><img src="https://s2.loli.net/2022/05/29/Dr5c9uHVUOaIQv7.png" alt="image-20220529150533296"></p><p>借阅服务是一个关联性比较强的服务，需要在查询出借阅信息的基础上，获取借阅用户和借阅书籍的详细信息。根据单一职责和数据独立的原则，我们可以让一个服务作为消费者调用另一个服务即提供者来获取信息。</p><p><img src="https://s2.loli.net/2022/05/29/UOwuHFY9t8M4g5J.jpg" alt="image-20220323140322502"></p><h3 id="RestTemplate-HTTP请求工具实现远程调用"><a href="#RestTemplate-HTTP请求工具实现远程调用" class="headerlink" title="RestTemplate-HTTP请求工具实现远程调用"></a>RestTemplate-HTTP请求工具实现远程调用</h3><p>这里先使用RestTemplate作为HTTP请求工具，它提供了常见的REST请求方案的模版，例如 GET 请求、POST 请求、PUT 请求、DELETE 请求以及一些通用的请求执行方法 exchange 以及 execute。</p><h4 id="注册RestTemplate"><a href="#注册RestTemplate" class="headerlink" title="注册RestTemplate"></a>注册RestTemplate</h4><p>由于启动类也是配置类，我们可以直接在启动类实现RestTemplate对象的创建和注册。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.test.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorrowApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(BorrowApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*注册RestTemplate对象*/</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里以查询用户借阅信息为例</p><p><img src="https://s2.loli.net/2022/05/29/s7FTxkGOK3jZVor.png" alt="image-20220529142333093"></p><h4 id="配置文件配置mybatis"><a href="#配置文件配置mybatis" class="headerlink" title="配置文件配置mybatis"></a>配置文件配置mybatis</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">classpath:mapper/*.xml</span></span><br></pre></td></tr></table></figure><p>在启动类添加@MapperScan</p><p><img src="https://s2.loli.net/2022/05/29/Zb5J6cEQU3xwjiV.png" alt="image-20220529142636511"></p><h4 id="业务处理"><a href="#业务处理" class="headerlink" title="业务处理"></a>业务处理</h4><h5 id="创建服务实体类"><a href="#创建服务实体类" class="headerlink" title="创建服务实体类:"></a>创建服务实体类:</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserBorrowDetail</span> &#123;</span><br><span class="line">    User user;</span><br><span class="line">    List&lt;Book&gt; books;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="创建Dao-1"><a href="#创建Dao-1" class="headerlink" title="创建Dao:"></a>创建Dao:</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BorrowMapper</span> &#123;</span><br><span class="line">    List&lt;Borrow&gt; <span class="title function_">getBorrow</span><span class="params">(Long uid, Long bid)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="创建mapper-xml"><a href="#创建mapper-xml" class="headerlink" title="创建mapper.xml:"></a>创建mapper.xml:</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.test.dao.BorrowMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getBorrow&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.test.entity.Borrow&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM borrow_info</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;uid != null&quot;</span>&gt;</span> uid = #&#123;uid&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;bid != null&quot;</span>&gt;</span> and bid = #&#123;bid&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="创建Service-1"><a href="#创建Service-1" class="headerlink" title="创建Service:"></a>创建Service:</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BorrowService</span> &#123;</span><br><span class="line">    UserBorrowDetail <span class="title function_">getBorrowByUser</span><span class="params">(Long uid)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用RestTemplate服务远程调用"><a href="#使用RestTemplate服务远程调用" class="headerlink" title="使用RestTemplate服务远程调用"></a>使用RestTemplate服务远程调用</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorrowServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BorrowService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    BorrowMapper borrowMapper;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserBorrowDetail <span class="title function_">getBorrowByUser</span><span class="params">(Long uid)</span> &#123;</span><br><span class="line">        List&lt;Borrow&gt; borrows = borrowMapper.getBorrow(uid,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> restTemplate.getForObject(<span class="string">&quot;http://localhost:8101/user/&quot;</span> + uid, User.class);</span><br><span class="line">        List&lt;Book&gt; books = borrows.stream().map(borrow -&gt; restTemplate.getForObject(<span class="string">&quot;http://localhost:8201/book/&quot;</span> + borrow.getBid(), Book.class)).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserBorrowDetail</span>(user, books);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><h5 id="创建Controller-1"><a href="#创建Controller-1" class="headerlink" title="创建Controller:"></a>创建Controller:</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorrowController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    BorrowService borrowService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/borrow/user/&#123;uid&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> UserBorrowDetail <span class="title function_">getBorrowByUser</span><span class="params">(<span class="meta">@PathVariable(&quot;uid&quot;)</span> Long uid)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> borrowService.getBorrowByUser(uid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/29/CsgT2OHu9ZGbVcN.png" alt="image-20220529143045741"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;微服务实战&quot;&gt;&lt;a href=&quot;#微服务实战&quot; class=&quot;headerlink&quot; title=&quot;微服务实战&quot;&gt;&lt;/a&gt;微服务实战&lt;/h1&gt;&lt;p&gt;本项目示例是一个图书借阅系统，本教程会更加注重于架构设计上的讲解，弱化业务功能和实现原理方面的研究。&lt;/p&gt;
&lt;h2</summary>
      
    
    
    
    
    <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud（一）前言和简介</title>
    <link href="http://example.com/2022/05/26/01.Spring%20Cloud%EF%BC%88%E4%B8%80%EF%BC%89%E5%89%8D%E8%A8%80%E5%92%8C%E7%AE%80%E4%BB%8B/"/>
    <id>http://example.com/2022/05/26/01.Spring%20Cloud%EF%BC%88%E4%B8%80%EF%BC%89%E5%89%8D%E8%A8%80%E5%92%8C%E7%AE%80%E4%BB%8B/</id>
    <published>2022-05-26T14:30:55.000Z</published>
    <updated>2022-05-29T06:57:20.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Cloud"><a href="#Spring-Cloud" class="headerlink" title="Spring Cloud"></a>Spring Cloud</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="单体应用架构"><a href="#单体应用架构" class="headerlink" title="单体应用架构"></a>单体应用架构</h3><p>基于SpringBoot框架，我们可以轻松的完成一个单体应用的搭建，单体应用是一个归档包包含整个系统所有功能的应用程序，它将系统的各项功能融于一体。</p><p><img src="https://s2.loli.net/2022/05/25/cCfj24EezbqaPQM.png" alt="image-20220525104057057"></p><p>单体应用容易搭建、部署和测试等，然而随着需求、功能和用户的不断增加，单体应用出现了复杂性高、技术债务、部署频率低、可靠性差、扩展能力受限、阻碍技术创新等问题，因此如今单体应用很难满足互联网时代业务快速变化的需要。</p><h3 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h3><p>如何解决单体应用架构存在的问题，<strong>微服务</strong>是一种全新架构模式，它有助于解决这些问题。Martin Fowler在2014年提出了“微服务”架构，他对于“微服务”的描述如下：</p><blockquote><p> In short, the microservice architectural style is an approach to developing a single application as a suite of small services, each running in its own process and communicating with lightweight mechanisms, often an HTTP resource API. These services are built around business capabilities and independently deployable by fully automated deployment machinery. There is a bare minimum of centralized management of these services, which may be written in different programming languages and use different data storage technologies.</p></blockquote><p>用中文表述就是,微服务架构风格是一种将一个单一应用程序开发为-一组小型服务的方法，每个服务运行在自己的进程中，服务间通信采用轻量级通信机制(通常用HTTP资源API)。这些服务围绕业务能力构建并且可通过全自动部署机制独立部署。这些服务共用一个最小型的集中式的管理，服务可用不同的语言开发,使用不同的数据存储技术。</p><p>因此微服务架构具备以下特点：</p><ul><li>微服务将单体应用拆分为一个个微服务,每个微服务为独立的业务开发,一个微服务只关注某个特定功能</li><li>每个微服务可以在自己的进程中独立运行,一系列独立运行的微服务共同构建整个系统</li><li>微服务之间通过一些轻量级的通信机制进行通信和数据交互,可以实现不同的微服务使用不同的语言和数据存储技术</li><li>支持全自动的部署机制，一个微服务可以部署在多个服务器，保证微服务的高可用。</li></ul><p><img src="https://s2.loli.net/2022/05/25/9KHi6WZlPpTgD4t.png" alt="image-20220525110414340"></p><p>整个应用被分解为多个微服务，各个微服务独立运行在自己的进程中，并分别有自己的数据库、微服务之间使用REST或者其他通信协议。</p><h3 id="微服务架构的优点"><a href="#微服务架构的优点" class="headerlink" title="微服务架构的优点"></a>微服务架构的优点</h3><p>相比于单体应用架构，微服务架构具有如下优点：</p><ul><li>业务模块划分清晰、易于开发和维护</li><li>局部修改，易于部署</li><li>技术栈不受限</li><li>伸缩性强，高可用</li></ul><h3 id="微服务架构面临的挑战"><a href="#微服务架构面临的挑战" class="headerlink" title="微服务架构面临的挑战"></a>微服务架构面临的挑战</h3><ul><li>通信接口调整和运维成本提高</li><li>系统复杂性提高，分布式系统需要考虑系统管理和监控、容错、网络延迟、分布式事务等问题</li></ul><h3 id="微服务设计原则"><a href="#微服务设计原则" class="headerlink" title="微服务设计原则"></a>微服务设计原则</h3><h4 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h4><p>单一职责原则是指一个单元（类、方法或服务等）只应关注整个系统功能中单独、有界限的一部分。这一原则可以帮助我们更加优雅地开发、更便捷地交付。</p><h4 id="服务自治原则"><a href="#服务自治原则" class="headerlink" title="服务自治原则"></a>服务自治原则</h4><p>服务自治是指每个微服务应具备独立的业务能力、依赖与运行环境。在微服务架构中，服务是独立的业务单元，与其他服务高度解耦。每个微服务从 构建、开发、测试、部署都可以独立运行，不依赖于其他服务。</p><h4 id="轻量级通信机制"><a href="#轻量级通信机制" class="headerlink" title="轻量级通信机制"></a>轻量级通信机制</h4><p>微服务之间应该通过轻量级的通信机制进行交互。轻量级的通信机制应具备体量小、跨语言跨平台的特点。常用的协议有REST、AMQP、STOMP、MQTT等。</p><h4 id="微服务粒度"><a href="#微服务粒度" class="headerlink" title="微服务粒度"></a>微服务粒度</h4><p>在微服务的设计阶段，使用合适的粒度划分微服务，确定其边界，保证微服务之间相对独立并保持松耦合。</p><p>领域驱动设计（Domain Driven Design）中的“界限上下文”可作为划分微服务边界、确定微服务粒度的重要依据。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>微服务架构的演进是一个循序渐进的过程，系统会根据需求业务的变化，对微服务进行重构，甚至重新划分，让架构更加合理，最终实现微服务的开发、部署、测试以及运维效率高的目的。</p><h3 id="微服务架构的实现"><a href="#微服务架构的实现" class="headerlink" title="微服务架构的实现"></a>微服务架构的实现</h3><p>微服务应用的实现相较于单体架构，需要开发框架的支持、一些自动化部署的工具、以及Iaas、PaaS或CaaS等的支持。</p><h4 id="开发框架选择：Spring-Cloud"><a href="#开发框架选择：Spring-Cloud" class="headerlink" title="开发框架选择：Spring Cloud"></a>开发框架选择：Spring Cloud</h4><p>Spring Cloud基于Spring框架一套分布式解决方案，具备开箱即用的生产特性，提升开发效率。</p><h4 id="运行平台"><a href="#运行平台" class="headerlink" title="运行平台"></a>运行平台</h4><p>微服务可以部署在PC Server、阿里云、AWS等云计算平台。处于轻量、灵活、应用支撑等方面考虑，本文将微服务署在Docker上。</p><h3 id="架构图及常用组件"><a href="#架构图及常用组件" class="headerlink" title="架构图及常用组件"></a>架构图及常用组件</h3><p><img src="https://s2.loli.net/2022/05/26/tnqRixhw4N26M8T.png" alt="image-20220526215843868"></p><p><img src="https://s2.loli.net/2022/05/27/k6LUTyzKMbm7fHS.png" alt="image-20220527234509921"></p><h3 id="微服务常用技术栈"><a href="#微服务常用技术栈" class="headerlink" title="微服务常用技术栈"></a>微服务常用技术栈</h3><p><img src="https://s2.loli.net/2022/05/28/ufzmh8rXIe2wdyN.png" alt="image-20220528041614896"></p><h2 id="SpringCloud简介"><a href="#SpringCloud简介" class="headerlink" title="SpringCloud简介"></a>SpringCloud简介</h2><h3 id="Spring-Cloud的介绍"><a href="#Spring-Cloud的介绍" class="headerlink" title="Spring Cloud的介绍"></a>Spring Cloud的介绍</h3><p>Spring Cloud是Spring提供的一套<strong>分布式解决方案</strong>，用于快速构建分布式系统的通用模式的工具集 。目的是<strong>协调任何服务</strong>，<strong>简化分布式系统开发</strong>。</p><p>Spring Cloud对常见的分布式系统模式提供了简单易用的<strong>编程模型</strong>，帮助开发者构建弹性、可靠、协调的应用程序。</p><p>Spring Cloud<strong>提供</strong>了<strong>快速构建分布式协调架构</strong>的<strong>组件</strong>，例如服务发现、配置管理、断路器、智能路由、微代理、控制总线、一次性令牌、全局锁定、领导选举、分布式会话、集群状态等。</p><p><img src="https://s2.loli.net/2022/05/25/ETdZKgP2Lzuxm5D.png" alt="来自Spring官网"></p><h3 id="Spring-Cloud的特点"><a href="#Spring-Cloud的特点" class="headerlink" title="Spring Cloud的特点"></a>Spring Cloud的特点</h3><ul><li>基于Spring框架，具备约定优于配置、开箱即用和快速启动等特性</li><li>适用于各种环境。开发和部署在PC Server或各种云环境等</li><li>隐藏组件的复杂性、提供声明式、无xml的配置方式</li><li>组件丰富、功能齐全且轻量级，选型中立，灵活，各个组件解耦。</li></ul><h3 id="Spring-Cloud组件概述"><a href="#Spring-Cloud组件概述" class="headerlink" title="Spring Cloud组件概述"></a>Spring Cloud组件概述</h3><h4 id="Spring-Cloud-Eureka"><a href="#Spring-Cloud-Eureka" class="headerlink" title="Spring Cloud Eureka"></a>Spring Cloud Eureka</h4><p><strong>服务治理</strong>组件，包括服务端的<strong>服务注册</strong>中心和客户端的<strong>服务发现</strong>机制。</p><h4 id="Spring-Cloud-Ribbon"><a href="#Spring-Cloud-Ribbon" class="headerlink" title="Spring Cloud Ribbon"></a>Spring Cloud Ribbon</h4><p><strong>负载均衡的服务调用</strong>组件，具有多种负载均衡调用策略。</p><h4 id="Spring-Cloud-Hystrix"><a href="#Spring-Cloud-Hystrix" class="headerlink" title="Spring Cloud Hystrix"></a>Spring Cloud Hystrix</h4><p><strong>服务容错</strong>组件，实现了<strong>断路器</strong>模式，为依赖服务的出错和延迟提供了容错能力。</p><h4 id="Spring-Cloud-Feign"><a href="#Spring-Cloud-Feign" class="headerlink" title="Spring Cloud Feign"></a>Spring Cloud Feign</h4><p>基于Ribbon和Hystrix的<strong>声明式服务调用</strong>组件。</p><h4 id="Spring-Cloud-Zuul"><a href="#Spring-Cloud-Zuul" class="headerlink" title="Spring Cloud Zuul"></a>Spring Cloud Zuul</h4><p><strong>API网关</strong>组件，对请求提供<strong>路由</strong>及<strong>过滤</strong>功能。</p><h4 id="Spring-Cloud-Bus"><a href="#Spring-Cloud-Bus" class="headerlink" title="Spring Cloud Bus"></a>Spring Cloud Bus</h4><p>用于<strong>传播集群状态变化</strong>的<strong>消息总线</strong>，使用轻量级<strong>消息代理链接分布式系统中的节点</strong>，可以用来<strong>动态刷新集群中的服务配置</strong>。</p><h4 id="Spring-Cloud-config"><a href="#Spring-Cloud-config" class="headerlink" title="Spring Cloud config"></a>Spring Cloud config</h4><p>集中<strong>配置管理</strong>工具，分布式系统中统一的<strong>外部配置管理</strong>，默认<strong>使用Git</strong>来<strong>存储配置</strong>，支持<strong>客户端配置的刷新</strong>及加密、<strong>解密</strong>操作。</p><h4 id="Spring-Cloud-Consul"><a href="#Spring-Cloud-Consul" class="headerlink" title="Spring Cloud Consul"></a>Spring Cloud Consul</h4><p>基于Hashicorp Consul的<strong>服务治理</strong>组件。</p><h4 id="Spring-Cloud-Security"><a href="#Spring-Cloud-Security" class="headerlink" title="Spring Cloud Security"></a>Spring Cloud Security</h4><p>安全工具包，对Zuul代理中的负载均衡<strong>OAuth2客户端</strong>及<strong>登录认证</strong>进行支持。</p><h4 id="Spring-Cloud-Bus-1"><a href="#Spring-Cloud-Bus-1" class="headerlink" title="Spring Cloud Bus"></a>Spring Cloud Bus</h4><p>使用轻量级的消息代理来连接微服务架构中的各个服务，主要用于广播状态更改或其他管理指令。</p><h4 id="Spring-Cloud-Sleuth"><a href="#Spring-Cloud-Sleuth" class="headerlink" title="Spring Cloud Sleuth"></a>Spring Cloud Sleuth</h4><p>Spring Cloud应用程序的<strong>分布式请求链路跟踪</strong>，支持使用Zipkin、HTrace和基于日志（例如ELK）的跟踪。</p><h4 id="Spring-Cloud-Stream"><a href="#Spring-Cloud-Stream" class="headerlink" title="Spring Cloud Stream"></a>Spring Cloud Stream</h4><p>轻量级<strong>事件驱动微服务</strong>框架，可以使用简单的<strong>声明式模型</strong>来<strong>发送及接收消息</strong>，主要实现为Apache Kafka及RabbitMQ。</p><h4 id="Spring-Cloud-Task"><a href="#Spring-Cloud-Task" class="headerlink" title="Spring Cloud Task"></a>Spring Cloud Task</h4><p>用于<strong>快速构建短暂</strong>、<strong>有限数据处理任务</strong>的微服务框架，用于向应用中添加功能性和非功能性的特征。</p><h4 id="Spring-Cloud-Zookeeper"><a href="#Spring-Cloud-Zookeeper" class="headerlink" title="Spring Cloud Zookeeper"></a>Spring Cloud Zookeeper</h4><p>基于Apache Zookeeper的服务治理组件。</p><h4 id="Spring-Cloud-Gateway"><a href="#Spring-Cloud-Gateway" class="headerlink" title="Spring Cloud Gateway"></a>Spring Cloud Gateway</h4><p><strong>API网关组件</strong>，<strong>对请求提供路由及过滤</strong>功能。</p><h4 id="Spring-Cloud-OpenFegin"><a href="#Spring-Cloud-OpenFegin" class="headerlink" title="Spring Cloud OpenFegin"></a>Spring Cloud OpenFegin</h4><p>基于Ribbon和Hystrix的<strong>声明式服务调用</strong>组件，可以<strong>动态创建基于Spring MVC注解的接口实现</strong>，用于<strong>服务调用</strong>，在Spring Cloud2.0中已经取代Feign。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring-Cloud&quot;&gt;&lt;a href=&quot;#Spring-Cloud&quot; class=&quot;headerlink&quot; title=&quot;Spring Cloud&quot;&gt;&lt;/a&gt;Spring Cloud&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;</summary>
      
    
    
    
    
    <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Docsify</title>
    <link href="http://example.com/2022/05/22/Docsify/"/>
    <id>http://example.com/2022/05/22/Docsify/</id>
    <published>2022-05-22T09:18:55.000Z</published>
    <updated>2022-05-22T15:00:21.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docsify"><a href="#Docsify" class="headerlink" title="Docsify"></a>Docsify</h1><h2 id="Docsify简介"><a href="#Docsify简介" class="headerlink" title="Docsify简介"></a>Docsify简介</h2><p>Docsify是一个动态生成的文档网站的工具，Docsify不会生成静态的HTML文件，它会在运行时完成对Markdown文件的加载和解析。</p><p>本文将主要介绍如何使用Docsify快速搭建一个快捷、轻量级的个人&amp;团队文档。</p><h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Node.js是JavaScript运行环境，支持JavaScript运行在服务端的开发平台</p><p>Node.js官网地址：<a href="https://nodejs.org/">https://nodejs.org/</a></p><p><img src="https://s2.loli.net/2022/05/21/TOC8w2ZSvfdFgJN.png" alt="202205201211462"></p><p><img src="https://s2.loli.net/2022/05/21/GIvEb4esqrDlFTy.png" alt="202205201226136"></p><h3 id="安装docsify-cli工具"><a href="#安装docsify-cli工具" class="headerlink" title="安装docsify-cli工具"></a>安装docsify-cli工具</h3><p>docsify-cli进行本地初始化和实时预览</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i docsify-cli -g</span><br><span class="line">//推荐使用图内镜像</span><br><span class="line">cnpm i docsify-cli -g</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/22/3ty5M4Lz1g2VlKN.png" alt="image-20220522173914010"></p><h3 id="初始化项目结构"><a href="#初始化项目结构" class="headerlink" title="初始化项目结构"></a>初始化项目结构</h3><p>新建一个docs文件夹，通过init初始化项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docsify init ./docs</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/22/HBorcbEiqQXhdS8.png" alt="image-20220522174002177"></p><p><img src="https://s2.loli.net/2022/05/22/DPrEomUQW5nuMZt.png" alt="image-20220522174024315"></p><p><img src="https://s2.loli.net/2022/05/22/GbMueCUpT1ZSrDs.png" alt="image-20220522180143594"></p><h3 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docsify serve docs</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/22/A24lQ35SWLxprsO.png" alt="image-20220522174218091"></p><p><img src="https://s2.loli.net/2022/05/22/zgjxPEOnU1WFCBR.png" alt="image-20220522174156828"></p><h3 id="基础配置文件"><a href="#基础配置文件" class="headerlink" title="基础配置文件"></a>基础配置文件</h3><h4 id="基础配置项-index-html"><a href="#基础配置项-index-html" class="headerlink" title="基础配置项-index.html"></a>基础配置项-index.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Docsify By XiaoYuanJW<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Description&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable = no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 设置图标 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 默认主题 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/docsify@4/lib/themes/vue.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 加载中 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>loading...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">$docsify</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;Docsify By XiaoYuanJW&#x27;</span>,<span class="comment">//项目名称</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">repo</span>: <span class="string">&#x27;https://github.com/XiaoYuanJW&#x27;</span>,<span class="comment">//仓库地址</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">loadSidebar</span>: <span class="literal">true</span>,<span class="comment">//侧边框支持</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">loadNavbar</span>: <span class="literal">true</span>,<span class="comment">//导航栏支持</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">coverpage</span>: <span class="literal">true</span>,<span class="comment">//封面支持</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">maxLevel</span>: <span class="number">5</span>,<span class="comment">//设置最大支持渲染的标题层级</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">subMaxLevel</span>: <span class="number">4</span>,<span class="comment">//设置生成目录的最大层级</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">mergeNavbar</span>: <span class="literal">true</span>,<span class="comment">//小屏设备合并导航栏到侧边栏</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">alias</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;/.*/_sidebar.md&#x27;</span>: <span class="string">&#x27;/_sidebar.md&#x27;</span><span class="comment">//防止意外回退</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">alias</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;/.*/_navbar.md&#x27;</span>: <span class="string">&#x27;/_navbar.md&#x27;</span><span class="comment">//防止意外回退</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;  </span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 搜索配置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">$docsify</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">search</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">maxAge</span>: <span class="number">86400000</span>,<span class="comment">//过期时间，单位毫秒，默认一天</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">paths</span>: auto,<span class="comment">//注意：仅适用于paths: &#x27;auto&#x27;模式</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 支持本地化</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">placeholder</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;/zh-cn/&#x27;</span>: <span class="string">&#x27;搜索&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;/&#x27;</span>: <span class="string">&#x27;Type to search&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">noData</span>: <span class="string">&#x27;can not find results&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">depth</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">hideOtherSidebarContent</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">namespace</span>: <span class="string">&#x27;Docsify By XiaoYuanJW&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Docsify v4 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/docsify@4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- docsify的js依赖 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- emoji表情支持 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/docsify/lib/plugins/emoji.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 图片放大缩小支持 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/docsify/lib/plugins/zoom-image.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 搜索功能支持 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/docsify/lib/plugins/search.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Click to copy支持--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/docsify-copy-code/dist/docsify-copy-code.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 代码高亮 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//unpkg.com/prismjs/components/prism-bash.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//unpkg.com/prismjs/components/prism-java.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//unpkg.com/prismjs/components/prism-sql.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="封面配置文件-coverpage-md"><a href="#封面配置文件-coverpage-md" class="headerlink" title="封面配置文件-_coverpage.md"></a>封面配置文件-_coverpage.md</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Java学习记录</span></span><br><span class="line"><span class="quote">&gt; Notes of Java Created by XiaoYuanJW</span></span><br><span class="line"></span><br><span class="line">Java学习过程和记录</span><br><span class="line"></span><br><span class="line">[<span class="string">GitHub</span>](<span class="link">https://github.com/XiaoYuanJW</span>)</span><br><span class="line">[<span class="string">Get Started</span>](<span class="link">README.md</span>)</span><br></pre></td></tr></table></figure><h4 id="侧边栏配置文件-sidebar-md"><a href="#侧边栏配置文件-sidebar-md" class="headerlink" title="侧边栏配置文件-_sidebar.md"></a>侧边栏配置文件-_sidebar.md</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 基础篇</span><br><span class="line"><span class="bullet">  *</span> [<span class="string">MySQL</span>](<span class="link">basic/MySQL.md</span>)</span><br><span class="line"><span class="bullet">*</span> 架构篇</span><br><span class="line"><span class="bullet">  *</span> [<span class="string">SpringBoot</span>](<span class="link">architect/SpringBoot.md</span>)</span><br><span class="line"><span class="bullet">  *</span> [<span class="string">MyBatis</span>](<span class="link">architect/MyBatis.md</span>)</span><br><span class="line"><span class="bullet">  *</span> [<span class="string">SpringCloud</span>](<span class="link">architect/SpringCloud.md</span>)</span><br></pre></td></tr></table></figure><h4 id="导航栏配置文件-navbar-md"><a href="#导航栏配置文件-navbar-md" class="headerlink" title="导航栏配置文件-_navbar.md"></a>导航栏配置文件-_navbar.md</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 网站</span><br><span class="line"><span class="bullet">  *</span> [<span class="string">myBlog</span>](<span class="link">https://xiaoyuanjw.github.io/</span>)</span><br><span class="line"><span class="bullet">  *</span> [<span class="string">Leetcode</span>](<span class="link">https://leetcode.cn/u/xiaoyuanjw/</span>)</span><br><span class="line"><span class="bullet">*</span> 项目地址</span><br><span class="line"><span class="bullet">  *</span> [<span class="string">myMall</span>](<span class="link">https://github.com/XiaoYuanJW/mymall_pro</span>)</span><br></pre></td></tr></table></figure><h3 id="部署远端-Github"><a href="#部署远端-Github" class="headerlink" title="部署远端-Github"></a>部署远端-Github</h3><h4 id="新建代码仓库"><a href="#新建代码仓库" class="headerlink" title="新建代码仓库"></a>新建代码仓库</h4><p><img src="https://pic3.zhimg.com/80/v2-aa77dbcb386e9a433d0a37aaba306876_720w.png" alt="img"></p><h4 id="提交仓库"><a href="#提交仓库" class="headerlink" title="提交仓库"></a>提交仓库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/XiaoYuanJW/Docsify.git</span><br><span class="line">git add *</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/22/tk1vo6yR4FnIT9V.png" alt="image-20220522215447029"></p><h4 id="开启GitHub-Pages服务"><a href="#开启GitHub-Pages服务" class="headerlink" title="开启GitHub Pages服务"></a>开启GitHub Pages服务</h4><p><img src="https://s2.loli.net/2022/05/22/PGOi2RDIUQEo6A1.png" alt="image-20220522224557192"></p><p><img src="https://s2.loli.net/2022/05/22/HYZlx8MC7qWXfjS.png" alt="image-20220522224450431"></p><p><img src="https://s2.loli.net/2022/05/22/SyUNLaZ9TjEHWJV.png" alt="image-20220522225032813"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docsify&quot;&gt;&lt;a href=&quot;#Docsify&quot; class=&quot;headerlink&quot; title=&quot;Docsify&quot;&gt;&lt;/a&gt;Docsify&lt;/h1&gt;&lt;h2 id=&quot;Docsify简介&quot;&gt;&lt;a href=&quot;#Docsify简介&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="Others" scheme="http://example.com/tags/Others/"/>
    
  </entry>
  
  <entry>
    <title>Hexo</title>
    <link href="http://example.com/2022/05/21/Hexo/"/>
    <id>http://example.com/2022/05/21/Hexo/</id>
    <published>2022-05-20T18:13:55.000Z</published>
    <updated>2022-05-20T18:55:11.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><h3 id="安装Hexo框架"><a href="#安装Hexo框架" class="headerlink" title="安装Hexo框架"></a>安装Hexo框架</h3><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>Node.js是JavaScript运行环境，支持JavaScript运行在服务端的开发平台</p><p>Node.js官网地址：<a href="https://nodejs.org/">https://nodejs.org/</a></p><p><img src="https://s2.loli.net/2022/05/21/TOC8w2ZSvfdFgJN.png" alt="202205201211462"></p><p><img src="https://s2.loli.net/2022/05/21/GIvEb4esqrDlFTy.png" alt="202205201226136"></p><h4 id="查看node和npm版本"><a href="#查看node和npm版本" class="headerlink" title="查看node和npm版本"></a>查看node和npm版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/rgEyeiRcdTj7kFq.png" alt="202205201230549"></p><h4 id="安装淘宝镜像源的cnpm管理器"><a href="#安装淘宝镜像源的cnpm管理器" class="headerlink" title="安装淘宝镜像源的cnpm管理器"></a>安装淘宝镜像源的cnpm管理器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/NCnrHDb2Fw8qjIa.png" alt="202205201235464"></p><h4 id="使用cnpm安装hexo"><a href="#使用cnpm安装hexo" class="headerlink" title="使用cnpm安装hexo"></a>使用cnpm安装hexo</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/NrPBRmnvYGF1i8J.png" alt="202205201237355"></p><p><img src="https://s2.loli.net/2022/05/21/5Vc2yJ4APoKEn9L.png" alt="202205202055699"></p><h3 id="新建本地博客服务"><a href="#新建本地博客服务" class="headerlink" title="新建本地博客服务"></a>新建本地博客服务</h3><h4 id="新建文件夹并进入该目录"><a href="#新建文件夹并进入该目录" class="headerlink" title="新建文件夹并进入该目录"></a>新建文件夹并进入该目录</h4><p><img src="https://s2.loli.net/2022/05/21/uOWaGfYP7FiMvJx.png" alt="202205202328578"></p><h4 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/rIjyqmQtHoZ65XK.png" alt="202205202357848"></p><p><img src="https://s2.loli.net/2022/05/21/EYILBe5Gz1sKmpv.png" alt="202205202357655"></p><h4 id="启动本地服务"><a href="#启动本地服务" class="headerlink" title="启动本地服务"></a>启动本地服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/pB3Sgz4Rl1nAsrY.png" alt="202205202359271"></p><h4 id="本地访问地址"><a href="#本地访问地址" class="headerlink" title="本地访问地址"></a>本地访问地址</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/8MDVjfRg9UadxHo.png" alt="202205210000921"></p><h4 id="创建新的文章"><a href="#创建新的文章" class="headerlink" title="创建新的文章"></a>创建新的文章</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/HgeRZyahA3jP5fd.png" alt="202205210005873"></p><h4 id="清理并生成"><a href="#清理并生成" class="headerlink" title="清理并生成"></a>清理并生成</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/7t8aARp25ns4zYF.png" alt="202205210008839"></p><h3 id="远端部署Github"><a href="#远端部署Github" class="headerlink" title="远端部署Github"></a>远端部署Github</h3><h4 id="创建一个新的仓库"><a href="#创建一个新的仓库" class="headerlink" title="创建一个新的仓库"></a>创建一个新的仓库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YourGithubName.github.io</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/lZNmv2BaRI3zOow.png" alt="image-20220521013933355"></p><h4 id="在Blog目录下安装git部署插件"><a href="#在Blog目录下安装git部署插件" class="headerlink" title="在Blog目录下安装git部署插件"></a>在Blog目录下安装git部署插件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/pX61UCDBTFakeKS.png" alt="image-20220521014255050"></p><h4 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h4><p><img src="https://s2.loli.net/2022/05/21/7xKjgYCRUXvMfOQ.png" alt="image-20220521014451812"></p><p><img src="https://s2.loli.net/2022/05/21/NcFBdCJlhGkyeVY.png" alt="image-20220521015324639"></p><h4 id="部署到Github远端"><a href="#部署到Github远端" class="headerlink" title="部署到Github远端"></a>部署到Github远端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/TGDAKj5SauzUpOB.png" alt="image-20220521015431257"></p><h4 id="查看博客"><a href="#查看博客" class="headerlink" title="查看博客"></a>查看博客</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://YourGithubName.github.io/ </span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/UHpLAeJX9bYqNa1.png" alt="image-20220521015704706"></p><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><h4 id="选择主题-Butterfly"><a href="#选择主题-Butterfly" class="headerlink" title="选择主题-Butterfly"></a>选择主题-Butterfly</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//官网</span><br><span class="line">https://butterfly.js.org/</span><br><span class="line">//Git仓库</span><br><span class="line">https://github.com/jerryc127/hexo-theme-butterfly</span><br></pre></td></tr></table></figure><h4 id="主题下载"><a href="#主题下载" class="headerlink" title="主题下载"></a>主题下载</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//克隆到themes目录下的butterfly文件夹</span><br><span class="line">git clone https://github.com/jerryc127/hexo-theme-butterfly themes/butterfly</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/CPYofTxe8DmQ5iU.png" alt="image-20220521023716102"></p><h4 id="修改配置-config-yml"><a href="#修改配置-config-yml" class="headerlink" title="修改配置_config.yml"></a>修改配置_config.yml</h4><p><img src="https://s2.loli.net/2022/05/21/zf4Wja2liQxqhZc.png" alt="image-20220521023849882"></p><h4 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/XutWCqQwcRKzpJP.png" alt="image-20220521024656434"></p><h4 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h4 id="运行本地服务"><a href="#运行本地服务" class="headerlink" title="运行本地服务"></a>运行本地服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h4 id="部署远端"><a href="#部署远端" class="headerlink" title="部署远端"></a>部署远端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/21/wUDJId1PV7ZLHvh.png" alt="image-20220521025504184"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h1&gt;&lt;h2 id=&quot;初始化项目&quot;&gt;&lt;a href=&quot;#初始化项目&quot; class=&quot;headerlink&quot; title=&quot;初始化项目&quot;&gt;</summary>
      
    
    
    
    
    <category term="Others" scheme="http://example.com/tags/Others/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/05/20/hello-world/"/>
    <id>http://example.com/2022/05/20/hello-world/</id>
    <published>2022-05-20T15:44:47.696Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
